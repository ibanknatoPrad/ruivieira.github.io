Index.PACKAGES = {"ml.smile" : [{"name" : "ml.smile.SMILEPredictionProvider", "trait" : "ml\/smile\/SMILEPredictionProvider.html", "kind" : "trait", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ml\/smile\/SMILEPredictionProvider.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ml\/smile\/SMILEPredictionProvider.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ml\/smile\/SMILEPredictionProvider.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ml\/smile\/SMILEPredictionProvider.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ml\/smile\/SMILEPredictionProvider.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ml\/smile\/SMILEPredictionProvider.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ml\/smile\/SMILEPredictionProvider.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/smile\/SMILEPredictionProvider.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/smile\/SMILEPredictionProvider.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/smile\/SMILEPredictionProvider.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ml\/smile\/SMILEPredictionProvider.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ml\/smile\/SMILEPredictionProvider.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ml\/smile\/SMILEPredictionProvider.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ml\/smile\/SMILEPredictionProvider.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ml\/smile\/SMILEPredictionProvider.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ml\/smile\/SMILEPredictionProvider.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ml\/smile\/SMILEPredictionProvider.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ml\/smile\/SMILEPredictionProvider.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ml\/smile\/SMILEPredictionProvider.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "predictAsync", "tail" : "(arg0: List[PredictionInput]): CompletableFuture[List[PredictionOutput]]", "member" : "org.kie.kogito.explainability.model.PredictionProvider.predictAsync", "link" : "ml\/smile\/SMILEPredictionProvider.html#predictAsync(x$1:java.util.List[org.kie.kogito.explainability.model.PredictionInput]):java.util.concurrent.CompletableFuture[java.util.List[org.kie.kogito.explainability.model.PredictionOutput]]", "kind" : "abstract def"}], "shortDescription" : ""}], "ml.smile.providers" : [{"name" : "ml.smile.providers.KNNProvider", "shortDescription" : "", "members_class" : [{"label" : "predictAsync", "tail" : "(inputs: List[PredictionInput]): CompletableFuture[List[PredictionOutput]]", "member" : "ml.smile.providers.KNNProvider.predictAsync", "link" : "ml\/smile\/providers\/KNNProvider.html#predictAsync(inputs:java.util.List[org.kie.kogito.explainability.model.PredictionInput]):java.util.concurrent.CompletableFuture[java.util.List[org.kie.kogito.explainability.model.PredictionOutput]]", "kind" : "def"}, {"member" : "ml.smile.providers.KNNProvider#<init>", "error" : "unsupported entity"}, {"member" : "ml.smile.providers.KNNProvider#<init>", "error" : "unsupported entity"}, {"label" : "model", "tail" : ": KNN[Array[Double]]", "member" : "ml.smile.providers.KNNProvider.model", "link" : "ml\/smile\/providers\/KNNProvider.html#model:smile.classification.KNN[Array[Double]]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ml\/smile\/providers\/KNNProvider.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ml\/smile\/providers\/KNNProvider.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ml\/smile\/providers\/KNNProvider.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ml\/smile\/providers\/KNNProvider.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ml\/smile\/providers\/KNNProvider.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ml\/smile\/providers\/KNNProvider.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ml\/smile\/providers\/KNNProvider.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/smile\/providers\/KNNProvider.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/smile\/providers\/KNNProvider.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/smile\/providers\/KNNProvider.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ml\/smile\/providers\/KNNProvider.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ml\/smile\/providers\/KNNProvider.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ml\/smile\/providers\/KNNProvider.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ml\/smile\/providers\/KNNProvider.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ml\/smile\/providers\/KNNProvider.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ml\/smile\/providers\/KNNProvider.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ml\/smile\/providers\/KNNProvider.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ml\/smile\/providers\/KNNProvider.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ml\/smile\/providers\/KNNProvider.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "ml\/smile\/providers\/KNNProvider.html", "kind" : "class"}, {"name" : "ml.smile.providers.LDAProvider", "shortDescription" : "", "members_class" : [{"label" : "predictAsync", "tail" : "(inputs: List[PredictionInput]): CompletableFuture[List[PredictionOutput]]", "member" : "ml.smile.providers.LDAProvider.predictAsync", "link" : "ml\/smile\/providers\/LDAProvider.html#predictAsync(inputs:java.util.List[org.kie.kogito.explainability.model.PredictionInput]):java.util.concurrent.CompletableFuture[java.util.List[org.kie.kogito.explainability.model.PredictionOutput]]", "kind" : "def"}, {"member" : "ml.smile.providers.LDAProvider#<init>", "error" : "unsupported entity"}, {"label" : "y", "tail" : ": DataFrame", "member" : "ml.smile.providers.LDAProvider.y", "link" : "ml\/smile\/providers\/LDAProvider.html#y:smile.data.DataFrame", "kind" : "val"}, {"label" : "x", "tail" : ": DataFrame", "member" : "ml.smile.providers.LDAProvider.x", "link" : "ml\/smile\/providers\/LDAProvider.html#x:smile.data.DataFrame", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ml\/smile\/providers\/LDAProvider.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ml\/smile\/providers\/LDAProvider.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ml\/smile\/providers\/LDAProvider.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ml\/smile\/providers\/LDAProvider.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ml\/smile\/providers\/LDAProvider.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ml\/smile\/providers\/LDAProvider.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ml\/smile\/providers\/LDAProvider.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/smile\/providers\/LDAProvider.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/smile\/providers\/LDAProvider.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/smile\/providers\/LDAProvider.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ml\/smile\/providers\/LDAProvider.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ml\/smile\/providers\/LDAProvider.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ml\/smile\/providers\/LDAProvider.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ml\/smile\/providers\/LDAProvider.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ml\/smile\/providers\/LDAProvider.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ml\/smile\/providers\/LDAProvider.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ml\/smile\/providers\/LDAProvider.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ml\/smile\/providers\/LDAProvider.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ml\/smile\/providers\/LDAProvider.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "ml\/smile\/providers\/LDAProvider.html", "kind" : "class"}, {"name" : "ml.smile.providers.RandomForestProvider", "shortDescription" : "", "members_class" : [{"label" : "predictAsync", "tail" : "(inputs: List[PredictionInput]): CompletableFuture[List[PredictionOutput]]", "member" : "ml.smile.providers.RandomForestProvider.predictAsync", "link" : "ml\/smile\/providers\/RandomForestProvider.html#predictAsync(inputs:java.util.List[org.kie.kogito.explainability.model.PredictionInput]):java.util.concurrent.CompletableFuture[java.util.List[org.kie.kogito.explainability.model.PredictionOutput]]", "kind" : "def"}, {"member" : "ml.smile.providers.RandomForestProvider#<init>", "error" : "unsupported entity"}, {"member" : "ml.smile.providers.RandomForestProvider#<init>", "error" : "unsupported entity"}, {"label" : "model", "tail" : ": RandomForest", "member" : "ml.smile.providers.RandomForestProvider.model", "link" : "ml\/smile\/providers\/RandomForestProvider.html#model:smile.classification.RandomForest", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ml\/smile\/providers\/RandomForestProvider.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ml\/smile\/providers\/RandomForestProvider.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ml\/smile\/providers\/RandomForestProvider.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ml\/smile\/providers\/RandomForestProvider.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ml\/smile\/providers\/RandomForestProvider.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ml\/smile\/providers\/RandomForestProvider.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ml\/smile\/providers\/RandomForestProvider.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/smile\/providers\/RandomForestProvider.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/smile\/providers\/RandomForestProvider.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/smile\/providers\/RandomForestProvider.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ml\/smile\/providers\/RandomForestProvider.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ml\/smile\/providers\/RandomForestProvider.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ml\/smile\/providers\/RandomForestProvider.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ml\/smile\/providers\/RandomForestProvider.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ml\/smile\/providers\/RandomForestProvider.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ml\/smile\/providers\/RandomForestProvider.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ml\/smile\/providers\/RandomForestProvider.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ml\/smile\/providers\/RandomForestProvider.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ml\/smile\/providers\/RandomForestProvider.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "ml\/smile\/providers\/RandomForestProvider.html", "kind" : "class"}], "ml.trusty" : [{"name" : "ml.trusty.Counterfactual", "shortDescription" : "", "members_class" : [{"label" : "explain", "tail" : "(goal: List[Output], features: List[Feature], domains: List[FeatureDomain], constraints: List[Boolean]): CounterfactualResult", "member" : "ml.trusty.Counterfactual.explain", "link" : "ml\/trusty\/Counterfactual.html#explain(goal:List[org.kie.kogito.explainability.model.Output],features:List[org.kie.kogito.explainability.model.Feature],domains:List[org.kie.kogito.explainability.model.domain.FeatureDomain],constraints:List[Boolean]):org.kie.kogito.explainability.local.counterfactual.CounterfactualResult", "kind" : "def"}, {"label" : "explainer", "tail" : ": CounterfactualExplainer", "member" : "ml.trusty.Counterfactual.explainer", "link" : "ml\/trusty\/Counterfactual.html#explainer:org.kie.kogito.explainability.local.counterfactual.CounterfactualExplainer", "kind" : "val"}, {"member" : "ml.trusty.Counterfactual#<init>", "error" : "unsupported entity"}, {"label" : "threshold", "tail" : ": Double", "member" : "ml.trusty.Counterfactual.threshold", "link" : "ml\/trusty\/Counterfactual.html#threshold:Double", "kind" : "val"}, {"label" : "steps", "tail" : ": Int", "member" : "ml.trusty.Counterfactual.steps", "link" : "ml\/trusty\/Counterfactual.html#steps:Int", "kind" : "val"}, {"label" : "model", "tail" : ": PredictionProvider", "member" : "ml.trusty.Counterfactual.model", "link" : "ml\/trusty\/Counterfactual.html#model:org.kie.kogito.explainability.model.PredictionProvider", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ml\/trusty\/Counterfactual.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ml\/trusty\/Counterfactual.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ml\/trusty\/Counterfactual.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ml\/trusty\/Counterfactual.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ml\/trusty\/Counterfactual.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ml\/trusty\/Counterfactual.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ml\/trusty\/Counterfactual.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/trusty\/Counterfactual.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/trusty\/Counterfactual.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/trusty\/Counterfactual.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ml\/trusty\/Counterfactual.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ml\/trusty\/Counterfactual.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ml\/trusty\/Counterfactual.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ml\/trusty\/Counterfactual.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ml\/trusty\/Counterfactual.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ml\/trusty\/Counterfactual.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ml\/trusty\/Counterfactual.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ml\/trusty\/Counterfactual.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ml\/trusty\/Counterfactual.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "ml\/trusty\/Counterfactual.html", "kind" : "class"}, {"name" : "ml.trusty.LIME", "shortDescription" : "", "members_class" : [{"label" : "explain", "tail" : "(features: List[Feature]): Map[String, Saliency]", "member" : "ml.trusty.LIME.explain", "link" : "ml\/trusty\/LIME.html#explain(features:List[org.kie.kogito.explainability.model.Feature]):java.util.Map[String,org.kie.kogito.explainability.model.Saliency]", "kind" : "def"}, {"label" : "explainer", "tail" : ": LimeExplainer", "member" : "ml.trusty.LIME.explainer", "link" : "ml\/trusty\/LIME.html#explainer:org.kie.kogito.explainability.local.lime.LimeExplainer", "kind" : "val"}, {"member" : "ml.trusty.LIME#<init>", "error" : "unsupported entity"}, {"label" : "model", "tail" : ": PredictionProvider", "member" : "ml.trusty.LIME.model", "link" : "ml\/trusty\/LIME.html#model:org.kie.kogito.explainability.model.PredictionProvider", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ml\/trusty\/LIME.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ml\/trusty\/LIME.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ml\/trusty\/LIME.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ml\/trusty\/LIME.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ml\/trusty\/LIME.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ml\/trusty\/LIME.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ml\/trusty\/LIME.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/trusty\/LIME.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/trusty\/LIME.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/trusty\/LIME.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ml\/trusty\/LIME.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ml\/trusty\/LIME.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ml\/trusty\/LIME.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ml\/trusty\/LIME.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ml\/trusty\/LIME.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ml\/trusty\/LIME.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ml\/trusty\/LIME.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ml\/trusty\/LIME.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ml\/trusty\/LIME.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "ml\/trusty\/LIME.html", "kind" : "class"}], "xai" : [{"name" : "xai.DMNInv", "shortDescription" : "", "object" : "xai\/DMNInv$.html", "members_object" : [{"label" : "main", "tail" : "(args: Array[String]): Unit", "member" : "xai.DMNInv.main", "link" : "xai\/DMNInv$.html#main(args:Array[String]):Unit", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "xai\/DMNInv$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "xai\/DMNInv$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "xai\/DMNInv$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "xai\/DMNInv$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "xai\/DMNInv$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "xai\/DMNInv$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "xai\/DMNInv$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "xai\/DMNInv$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "xai\/DMNInv$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "xai\/DMNInv$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "xai\/DMNInv$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "xai\/DMNInv$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "xai\/DMNInv$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "xai\/DMNInv$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "xai\/DMNInv$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "xai\/DMNInv$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "xai\/DMNInv$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "xai\/DMNInv$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "xai\/DMNInv$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}], "ml.smile.examples" : [{"name" : "ml.smile.examples.KNNEx", "shortDescription" : "", "object" : "ml\/smile\/examples\/KNNEx$.html", "members_object" : [{"label" : "main", "tail" : "(args: Array[String]): Unit", "member" : "ml.smile.examples.KNNEx.main", "link" : "ml\/smile\/examples\/KNNEx$.html#main(args:Array[String]):Unit", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ml\/smile\/examples\/KNNEx$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ml\/smile\/examples\/KNNEx$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ml\/smile\/examples\/KNNEx$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ml\/smile\/examples\/KNNEx$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ml\/smile\/examples\/KNNEx$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ml\/smile\/examples\/KNNEx$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ml\/smile\/examples\/KNNEx$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/smile\/examples\/KNNEx$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/smile\/examples\/KNNEx$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/smile\/examples\/KNNEx$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ml\/smile\/examples\/KNNEx$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ml\/smile\/examples\/KNNEx$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ml\/smile\/examples\/KNNEx$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ml\/smile\/examples\/KNNEx$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ml\/smile\/examples\/KNNEx$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ml\/smile\/examples\/KNNEx$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ml\/smile\/examples\/KNNEx$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ml\/smile\/examples\/KNNEx$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ml\/smile\/examples\/KNNEx$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "ml.smile.examples.LDAEx", "shortDescription" : "", "object" : "ml\/smile\/examples\/LDAEx$.html", "members_object" : [{"label" : "main", "tail" : "(args: Array[String]): Unit", "member" : "ml.smile.examples.LDAEx.main", "link" : "ml\/smile\/examples\/LDAEx$.html#main(args:Array[String]):Unit", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ml\/smile\/examples\/LDAEx$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ml\/smile\/examples\/LDAEx$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ml\/smile\/examples\/LDAEx$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ml\/smile\/examples\/LDAEx$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ml\/smile\/examples\/LDAEx$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ml\/smile\/examples\/LDAEx$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ml\/smile\/examples\/LDAEx$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/smile\/examples\/LDAEx$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/smile\/examples\/LDAEx$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/smile\/examples\/LDAEx$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ml\/smile\/examples\/LDAEx$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ml\/smile\/examples\/LDAEx$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ml\/smile\/examples\/LDAEx$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ml\/smile\/examples\/LDAEx$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ml\/smile\/examples\/LDAEx$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ml\/smile\/examples\/LDAEx$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ml\/smile\/examples\/LDAEx$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ml\/smile\/examples\/LDAEx$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ml\/smile\/examples\/LDAEx$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "ml.smile.examples.MetricsExample", "shortDescription" : "", "object" : "ml\/smile\/examples\/MetricsExample$.html", "members_object" : [{"label" : "main", "tail" : "(args: Array[String]): Unit", "member" : "ml.smile.examples.MetricsExample.main", "link" : "ml\/smile\/examples\/MetricsExample$.html#main(args:Array[String]):Unit", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ml\/smile\/examples\/MetricsExample$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ml\/smile\/examples\/MetricsExample$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ml\/smile\/examples\/MetricsExample$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ml\/smile\/examples\/MetricsExample$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ml\/smile\/examples\/MetricsExample$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ml\/smile\/examples\/MetricsExample$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ml\/smile\/examples\/MetricsExample$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/smile\/examples\/MetricsExample$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/smile\/examples\/MetricsExample$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/smile\/examples\/MetricsExample$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ml\/smile\/examples\/MetricsExample$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ml\/smile\/examples\/MetricsExample$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ml\/smile\/examples\/MetricsExample$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ml\/smile\/examples\/MetricsExample$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ml\/smile\/examples\/MetricsExample$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ml\/smile\/examples\/MetricsExample$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ml\/smile\/examples\/MetricsExample$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ml\/smile\/examples\/MetricsExample$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ml\/smile\/examples\/MetricsExample$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "ml.smile.examples.RandomForestEx", "shortDescription" : "", "object" : "ml\/smile\/examples\/RandomForestEx$.html", "members_object" : [{"label" : "main", "tail" : "(args: Array[String]): Unit", "member" : "ml.smile.examples.RandomForestEx.main", "link" : "ml\/smile\/examples\/RandomForestEx$.html#main(args:Array[String]):Unit", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ml\/smile\/examples\/RandomForestEx$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ml\/smile\/examples\/RandomForestEx$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ml\/smile\/examples\/RandomForestEx$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ml\/smile\/examples\/RandomForestEx$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ml\/smile\/examples\/RandomForestEx$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ml\/smile\/examples\/RandomForestEx$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ml\/smile\/examples\/RandomForestEx$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/smile\/examples\/RandomForestEx$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/smile\/examples\/RandomForestEx$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/smile\/examples\/RandomForestEx$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ml\/smile\/examples\/RandomForestEx$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ml\/smile\/examples\/RandomForestEx$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ml\/smile\/examples\/RandomForestEx$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ml\/smile\/examples\/RandomForestEx$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ml\/smile\/examples\/RandomForestEx$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ml\/smile\/examples\/RandomForestEx$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ml\/smile\/examples\/RandomForestEx$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ml\/smile\/examples\/RandomForestEx$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ml\/smile\/examples\/RandomForestEx$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}], "ml" : [], "ml.smile.data" : [{"name" : "ml.smile.data.Loader", "shortDescription" : "", "object" : "ml\/smile\/data\/Loader$.html", "members_object" : [{"label" : "csv", "tail" : "(path: String): DataFrame", "member" : "ml.smile.data.Loader.csv", "link" : "ml\/smile\/data\/Loader$.html#csv(path:String):smile.data.DataFrame", "kind" : "def"}, {"label" : "homeRelativePath", "tail" : "(path: String): Path", "member" : "ml.smile.data.Loader.homeRelativePath", "link" : "ml\/smile\/data\/Loader$.html#homeRelativePath(path:String):java.nio.file.Path", "kind" : "def"}, {"label" : "root", "tail" : ": List[String]", "member" : "ml.smile.data.Loader.root", "link" : "ml\/smile\/data\/Loader$.html#root:List[String]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ml\/smile\/data\/Loader$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ml\/smile\/data\/Loader$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ml\/smile\/data\/Loader$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ml\/smile\/data\/Loader$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ml\/smile\/data\/Loader$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ml\/smile\/data\/Loader$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ml\/smile\/data\/Loader$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/smile\/data\/Loader$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/smile\/data\/Loader$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/smile\/data\/Loader$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ml\/smile\/data\/Loader$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ml\/smile\/data\/Loader$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ml\/smile\/data\/Loader$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ml\/smile\/data\/Loader$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ml\/smile\/data\/Loader$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ml\/smile\/data\/Loader$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ml\/smile\/data\/Loader$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ml\/smile\/data\/Loader$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ml\/smile\/data\/Loader$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}], "parsers" : [{"name" : "parsers.CountIfStatements", "shortDescription" : "", "members_class" : [{"label" : "visit", "tail" : "(n: IfStmt, arg: Void): Visitable", "member" : "parsers.CountIfStatements.visit", "link" : "parsers\/CountIfStatements.html#visit(n:com.github.javaparser.ast.stmt.IfStmt,arg:Void):com.github.javaparser.ast.visitor.Visitable", "kind" : "def"}, {"label" : "count", "tail" : ": Int", "member" : "parsers.CountIfStatements.count", "link" : "parsers\/CountIfStatements.html#count:Int", "kind" : "var"}, {"member" : "parsers.CountIfStatements#<init>", "error" : "unsupported entity"}, {"label" : "visit", "tail" : "(n: PatternExpr, arg: Void): Visitable", "member" : "com.github.javaparser.ast.visitor.ModifierVisitor.visit", "link" : "parsers\/CountIfStatements.html#visit(n:com.github.javaparser.ast.expr.PatternExpr,arg:A):com.github.javaparser.ast.visitor.Visitable", "kind" : "def"}, {"label" : "visit", "tail" : "(n: TextBlockLiteralExpr, arg: Void): Visitable", "member" : "com.github.javaparser.ast.visitor.ModifierVisitor.visit", "link" : "parsers\/CountIfStatements.html#visit(n:com.github.javaparser.ast.expr.TextBlockLiteralExpr,arg:A):com.github.javaparser.ast.visitor.Visitable", "kind" : "def"}, {"label" : "visit", "tail" : "(n: YieldStmt, arg: Void): Visitable", "member" : "com.github.javaparser.ast.visitor.ModifierVisitor.visit", "link" : "parsers\/CountIfStatements.html#visit(n:com.github.javaparser.ast.stmt.YieldStmt,arg:A):com.github.javaparser.ast.visitor.Visitable", "kind" : "def"}, {"label" : "visit", "tail" : "(n: SwitchExpr, arg: Void): Visitable", "member" : "com.github.javaparser.ast.visitor.ModifierVisitor.visit", "link" : "parsers\/CountIfStatements.html#visit(n:com.github.javaparser.ast.expr.SwitchExpr,arg:A):com.github.javaparser.ast.visitor.Visitable", "kind" : "def"}, {"label" : "visit", "tail" : "(n: Modifier, arg: Void): Visitable", "member" : "com.github.javaparser.ast.visitor.ModifierVisitor.visit", "link" : "parsers\/CountIfStatements.html#visit(n:com.github.javaparser.ast.Modifier,arg:A):com.github.javaparser.ast.visitor.Visitable", "kind" : "def"}, {"label" : "visit", "tail" : "(n: VarType, arg: Void): Visitable", "member" : "com.github.javaparser.ast.visitor.ModifierVisitor.visit", "link" : "parsers\/CountIfStatements.html#visit(n:com.github.javaparser.ast.type.VarType,arg:A):com.github.javaparser.ast.visitor.Visitable", "kind" : "def"}, {"label" : "visit", "tail" : "(n: ReceiverParameter, arg: Void): Visitable", "member" : "com.github.javaparser.ast.visitor.ModifierVisitor.visit", "link" : "parsers\/CountIfStatements.html#visit(n:com.github.javaparser.ast.body.ReceiverParameter,arg:A):com.github.javaparser.ast.visitor.Visitable", "kind" : "def"}, {"label" : "visit", "tail" : "(n: UnparsableStmt, arg: Void): Visitable", "member" : "com.github.javaparser.ast.visitor.ModifierVisitor.visit", "link" : "parsers\/CountIfStatements.html#visit(n:com.github.javaparser.ast.stmt.UnparsableStmt,arg:A):com.github.javaparser.ast.visitor.Visitable", "kind" : "def"}, {"label" : "visit", "tail" : "(n: ModuleOpensDirective, arg: Void): Visitable", "member" : "com.github.javaparser.ast.visitor.ModifierVisitor.visit", "link" : "parsers\/CountIfStatements.html#visit(n:com.github.javaparser.ast.modules.ModuleOpensDirective,arg:A):com.github.javaparser.ast.visitor.Visitable", "kind" : "def"}, {"label" : "visit", "tail" : "(n: ModuleUsesDirective, arg: Void): Visitable", "member" : "com.github.javaparser.ast.visitor.ModifierVisitor.visit", "link" : "parsers\/CountIfStatements.html#visit(n:com.github.javaparser.ast.modules.ModuleUsesDirective,arg:A):com.github.javaparser.ast.visitor.Visitable", "kind" : "def"}, {"label" : "visit", "tail" : "(n: ModuleProvidesDirective, arg: Void): Visitable", "member" : "com.github.javaparser.ast.visitor.ModifierVisitor.visit", "link" : "parsers\/CountIfStatements.html#visit(n:com.github.javaparser.ast.modules.ModuleProvidesDirective,arg:A):com.github.javaparser.ast.visitor.Visitable", "kind" : "def"}, {"label" : "visit", "tail" : "(n: ModuleExportsDirective, arg: Void): Visitable", "member" : "com.github.javaparser.ast.visitor.ModifierVisitor.visit", "link" : "parsers\/CountIfStatements.html#visit(n:com.github.javaparser.ast.modules.ModuleExportsDirective,arg:A):com.github.javaparser.ast.visitor.Visitable", "kind" : "def"}, {"label" : "visit", "tail" : "(n: ModuleRequiresDirective, arg: Void): Visitable", "member" : "com.github.javaparser.ast.visitor.ModifierVisitor.visit", "link" : "parsers\/CountIfStatements.html#visit(n:com.github.javaparser.ast.modules.ModuleRequiresDirective,arg:A):com.github.javaparser.ast.visitor.Visitable", "kind" : "def"}, {"label" : "visit", "tail" : "(n: ModuleDeclaration, arg: Void): Visitable", "member" : "com.github.javaparser.ast.visitor.ModifierVisitor.visit", "link" : "parsers\/CountIfStatements.html#visit(n:com.github.javaparser.ast.modules.ModuleDeclaration,arg:A):com.github.javaparser.ast.visitor.Visitable", "kind" : "def"}, {"label" : "visit", "tail" : "(n: LineComment, arg: Void): Visitable", "member" : "com.github.javaparser.ast.visitor.ModifierVisitor.visit", "link" : "parsers\/CountIfStatements.html#visit(n:com.github.javaparser.ast.comments.LineComment,arg:A):com.github.javaparser.ast.visitor.Visitable", "kind" : "def"}, {"label" : "visit", "tail" : "(n: BlockComment, arg: Void): Visitable", "member" : "com.github.javaparser.ast.visitor.ModifierVisitor.visit", "link" : "parsers\/CountIfStatements.html#visit(n:com.github.javaparser.ast.comments.BlockComment,arg:A):com.github.javaparser.ast.visitor.Visitable", "kind" : "def"}, {"label" : "visit", "tail" : "(n: ImportDeclaration, arg: Void): Node", "member" : "com.github.javaparser.ast.visitor.ModifierVisitor.visit", "link" : "parsers\/CountIfStatements.html#visit(n:com.github.javaparser.ast.ImportDeclaration,arg:A):com.github.javaparser.ast.Node", "kind" : "def"}, {"label" : "visit", "tail" : "(n: NodeList[_ <: Node], arg: Void): Visitable", "member" : "com.github.javaparser.ast.visitor.ModifierVisitor.visit", "link" : "parsers\/CountIfStatements.html#visit(n:com.github.javaparser.ast.NodeList[_<:com.github.javaparser.ast.Node],arg:A):com.github.javaparser.ast.visitor.Visitable", "kind" : "def"}, {"label" : "visit", "tail" : "(n: TypeExpr, arg: Void): Visitable", "member" : "com.github.javaparser.ast.visitor.ModifierVisitor.visit", "link" : "parsers\/CountIfStatements.html#visit(n:com.github.javaparser.ast.expr.TypeExpr,arg:A):com.github.javaparser.ast.visitor.Visitable", "kind" : "def"}, {"label" : "visit", "tail" : "(n: MethodReferenceExpr, arg: Void): Visitable", "member" : "com.github.javaparser.ast.visitor.ModifierVisitor.visit", "link" : "parsers\/CountIfStatements.html#visit(n:com.github.javaparser.ast.expr.MethodReferenceExpr,arg:A):com.github.javaparser.ast.visitor.Visitable", "kind" : "def"}, {"label" : "visit", "tail" : "(n: LambdaExpr, arg: Void): Visitable", "member" : "com.github.javaparser.ast.visitor.ModifierVisitor.visit", "link" : "parsers\/CountIfStatements.html#visit(n:com.github.javaparser.ast.expr.LambdaExpr,arg:A):com.github.javaparser.ast.visitor.Visitable", "kind" : "def"}, {"label" : "visit", "tail" : "(n: WildcardType, arg: Void): Visitable", "member" : "com.github.javaparser.ast.visitor.ModifierVisitor.visit", "link" : "parsers\/CountIfStatements.html#visit(n:com.github.javaparser.ast.type.WildcardType,arg:A):com.github.javaparser.ast.visitor.Visitable", "kind" : "def"}, {"label" : "visit", "tail" : "(n: WhileStmt, arg: Void): Visitable", "member" : "com.github.javaparser.ast.visitor.ModifierVisitor.visit", "link" : "parsers\/CountIfStatements.html#visit(n:com.github.javaparser.ast.stmt.WhileStmt,arg:A):com.github.javaparser.ast.visitor.Visitable", "kind" : "def"}, {"label" : "visit", "tail" : "(n: VoidType, arg: Void): Visitable", "member" : "com.github.javaparser.ast.visitor.ModifierVisitor.visit", "link" : "parsers\/CountIfStatements.html#visit(n:com.github.javaparser.ast.type.VoidType,arg:A):com.github.javaparser.ast.visitor.Visitable", "kind" : "def"}, {"label" : "visit", "tail" : "(n: VariableDeclarator, arg: Void): Visitable", "member" : "com.github.javaparser.ast.visitor.ModifierVisitor.visit", "link" : "parsers\/CountIfStatements.html#visit(n:com.github.javaparser.ast.body.VariableDeclarator,arg:A):com.github.javaparser.ast.visitor.Visitable", "kind" : "def"}, {"label" : "visit", "tail" : "(n: VariableDeclarationExpr, arg: Void): Visitable", "member" : "com.github.javaparser.ast.visitor.ModifierVisitor.visit", "link" : "parsers\/CountIfStatements.html#visit(n:com.github.javaparser.ast.expr.VariableDeclarationExpr,arg:A):com.github.javaparser.ast.visitor.Visitable", "kind" : "def"}, {"label" : "visit", "tail" : "(n: UnknownType, arg: Void): Visitable", "member" : "com.github.javaparser.ast.visitor.ModifierVisitor.visit", "link" : "parsers\/CountIfStatements.html#visit(n:com.github.javaparser.ast.type.UnknownType,arg:A):com.github.javaparser.ast.visitor.Visitable", "kind" : "def"}, {"label" : "visit", "tail" : "(n: UnaryExpr, arg: Void): Visitable", "member" : "com.github.javaparser.ast.visitor.ModifierVisitor.visit", "link" : "parsers\/CountIfStatements.html#visit(n:com.github.javaparser.ast.expr.UnaryExpr,arg:A):com.github.javaparser.ast.visitor.Visitable", "kind" : "def"}, {"label" : "visit", "tail" : "(n: TypeParameter, arg: Void): Visitable", "member" : "com.github.javaparser.ast.visitor.ModifierVisitor.visit", "link" : "parsers\/CountIfStatements.html#visit(n:com.github.javaparser.ast.type.TypeParameter,arg:A):com.github.javaparser.ast.visitor.Visitable", "kind" : "def"}, {"label" : "visit", "tail" : "(n: LocalRecordDeclarationStmt, arg: Void): Visitable", "member" : "com.github.javaparser.ast.visitor.ModifierVisitor.visit", "link" : "parsers\/CountIfStatements.html#visit(n:com.github.javaparser.ast.stmt.LocalRecordDeclarationStmt,arg:A):com.github.javaparser.ast.visitor.Visitable", "kind" : "def"}, {"label" : "visit", "tail" : "(n: LocalClassDeclarationStmt, arg: Void): Visitable", "member" : "com.github.javaparser.ast.visitor.ModifierVisitor.visit", "link" : "parsers\/CountIfStatements.html#visit(n:com.github.javaparser.ast.stmt.LocalClassDeclarationStmt,arg:A):com.github.javaparser.ast.visitor.Visitable", "kind" : "def"}, {"label" : "visit", "tail" : "(n: TryStmt, arg: Void): Visitable", "member" : "com.github.javaparser.ast.visitor.ModifierVisitor.visit", "link" : "parsers\/CountIfStatements.html#visit(n:com.github.javaparser.ast.stmt.TryStmt,arg:A):com.github.javaparser.ast.visitor.Visitable", "kind" : "def"}, {"label" : "visit", "tail" : "(n: ThrowStmt, arg: Void): Visitable", "member" : "com.github.javaparser.ast.visitor.ModifierVisitor.visit", "link" : "parsers\/CountIfStatements.html#visit(n:com.github.javaparser.ast.stmt.ThrowStmt,arg:A):com.github.javaparser.ast.visitor.Visitable", "kind" : "def"}, {"label" : "visit", "tail" : "(n: ThisExpr, arg: Void): Visitable", "member" : "com.github.javaparser.ast.visitor.ModifierVisitor.visit", "link" : "parsers\/CountIfStatements.html#visit(n:com.github.javaparser.ast.expr.ThisExpr,arg:A):com.github.javaparser.ast.visitor.Visitable", "kind" : "def"}, {"label" : "visit", "tail" : "(n: SynchronizedStmt, arg: Void): Visitable", "member" : "com.github.javaparser.ast.visitor.ModifierVisitor.visit", "link" : "parsers\/CountIfStatements.html#visit(n:com.github.javaparser.ast.stmt.SynchronizedStmt,arg:A):com.github.javaparser.ast.visitor.Visitable", "kind" : "def"}, {"label" : "visit", "tail" : "(n: SwitchStmt, arg: Void): Visitable", "member" : "com.github.javaparser.ast.visitor.ModifierVisitor.visit", "link" : "parsers\/CountIfStatements.html#visit(n:com.github.javaparser.ast.stmt.SwitchStmt,arg:A):com.github.javaparser.ast.visitor.Visitable", "kind" : "def"}, {"label" : "visit", "tail" : "(n: SwitchEntry, arg: Void): Visitable", "member" : "com.github.javaparser.ast.visitor.ModifierVisitor.visit", "link" : "parsers\/CountIfStatements.html#visit(n:com.github.javaparser.ast.stmt.SwitchEntry,arg:A):com.github.javaparser.ast.visitor.Visitable", "kind" : "def"}, {"label" : "visit", "tail" : "(n: SuperExpr, arg: Void): Visitable", "member" : "com.github.javaparser.ast.visitor.ModifierVisitor.visit", "link" : "parsers\/CountIfStatements.html#visit(n:com.github.javaparser.ast.expr.SuperExpr,arg:A):com.github.javaparser.ast.visitor.Visitable", "kind" : "def"}, {"label" : "visit", "tail" : "(n: StringLiteralExpr, arg: Void): Visitable", "member" : "com.github.javaparser.ast.visitor.ModifierVisitor.visit", "link" : "parsers\/CountIfStatements.html#visit(n:com.github.javaparser.ast.expr.StringLiteralExpr,arg:A):com.github.javaparser.ast.visitor.Visitable", "kind" : "def"}, {"label" : "visit", "tail" : "(n: SingleMemberAnnotationExpr, arg: Void): Visitable", "member" : "com.github.javaparser.ast.visitor.ModifierVisitor.visit", "link" : "parsers\/CountIfStatements.html#visit(n:com.github.javaparser.ast.expr.SingleMemberAnnotationExpr,arg:A):com.github.javaparser.ast.visitor.Visitable", "kind" : "def"}, {"label" : "visit", "tail" : "(n: ReturnStmt, arg: Void): Visitable", "member" : "com.github.javaparser.ast.visitor.ModifierVisitor.visit", "link" : "parsers\/CountIfStatements.html#visit(n:com.github.javaparser.ast.stmt.ReturnStmt,arg:A):com.github.javaparser.ast.visitor.Visitable", "kind" : "def"}, {"label" : "visit", "tail" : "(n: UnionType, arg: Void): Visitable", "member" : "com.github.javaparser.ast.visitor.ModifierVisitor.visit", "link" : "parsers\/CountIfStatements.html#visit(n:com.github.javaparser.ast.type.UnionType,arg:A):com.github.javaparser.ast.visitor.Visitable", "kind" : "def"}, {"label" : "visit", "tail" : "(n: IntersectionType, arg: Void): Visitable", "member" : "com.github.javaparser.ast.visitor.ModifierVisitor.visit", "link" : "parsers\/CountIfStatements.html#visit(n:com.github.javaparser.ast.type.IntersectionType,arg:A):com.github.javaparser.ast.visitor.Visitable", "kind" : "def"}, {"label" : "visit", "tail" : "(n: ArrayCreationLevel, arg: Void): Visitable", "member" : "com.github.javaparser.ast.visitor.ModifierVisitor.visit", "link" : "parsers\/CountIfStatements.html#visit(n:com.github.javaparser.ast.ArrayCreationLevel,arg:A):com.github.javaparser.ast.visitor.Visitable", "kind" : "def"}, {"label" : "visit", "tail" : "(n: ArrayType, arg: Void): Visitable", "member" : "com.github.javaparser.ast.visitor.ModifierVisitor.visit", "link" : "parsers\/CountIfStatements.html#visit(n:com.github.javaparser.ast.type.ArrayType,arg:A):com.github.javaparser.ast.visitor.Visitable", "kind" : "def"}, {"label" : "visit", "tail" : "(n: SimpleName, arg: Void): Visitable", "member" : "com.github.javaparser.ast.visitor.ModifierVisitor.visit", "link" : "parsers\/CountIfStatements.html#visit(n:com.github.javaparser.ast.expr.SimpleName,arg:A):com.github.javaparser.ast.visitor.Visitable", "kind" : "def"}, {"label" : "visit", "tail" : "(n: PrimitiveType, arg: Void): Visitable", "member" : "com.github.javaparser.ast.visitor.ModifierVisitor.visit", "link" : "parsers\/CountIfStatements.html#visit(n:com.github.javaparser.ast.type.PrimitiveType,arg:A):com.github.javaparser.ast.visitor.Visitable", "kind" : "def"}, {"label" : "visit", "tail" : "(n: Name, arg: Void): Visitable", "member" : "com.github.javaparser.ast.visitor.ModifierVisitor.visit", "link" : "parsers\/CountIfStatements.html#visit(n:com.github.javaparser.ast.expr.Name,arg:A):com.github.javaparser.ast.visitor.Visitable", "kind" : "def"}, {"label" : "visit", "tail" : "(n: Parameter, arg: Void): Visitable", "member" : "com.github.javaparser.ast.visitor.ModifierVisitor.visit", "link" : "parsers\/CountIfStatements.html#visit(n:com.github.javaparser.ast.body.Parameter,arg:A):com.github.javaparser.ast.visitor.Visitable", "kind" : "def"}, {"label" : "visit", "tail" : "(n: PackageDeclaration, arg: Void): Visitable", "member" : "com.github.javaparser.ast.visitor.ModifierVisitor.visit", "link" : "parsers\/CountIfStatements.html#visit(n:com.github.javaparser.ast.PackageDeclaration,arg:A):com.github.javaparser.ast.visitor.Visitable", "kind" : "def"}, {"label" : "visit", "tail" : "(n: ObjectCreationExpr, arg: Void): Visitable", "member" : "com.github.javaparser.ast.visitor.ModifierVisitor.visit", "link" : "parsers\/CountIfStatements.html#visit(n:com.github.javaparser.ast.expr.ObjectCreationExpr,arg:A):com.github.javaparser.ast.visitor.Visitable", "kind" : "def"}, {"label" : "visit", "tail" : "(n: NullLiteralExpr, arg: Void): Visitable", "member" : "com.github.javaparser.ast.visitor.ModifierVisitor.visit", "link" : "parsers\/CountIfStatements.html#visit(n:com.github.javaparser.ast.expr.NullLiteralExpr,arg:A):com.github.javaparser.ast.visitor.Visitable", "kind" : "def"}, {"label" : "visit", "tail" : "(n: NormalAnnotationExpr, arg: Void): Visitable", "member" : "com.github.javaparser.ast.visitor.ModifierVisitor.visit", "link" : "parsers\/CountIfStatements.html#visit(n:com.github.javaparser.ast.expr.NormalAnnotationExpr,arg:A):com.github.javaparser.ast.visitor.Visitable", "kind" : "def"}, {"label" : "visit", "tail" : "(n: NameExpr, arg: Void): Visitable", "member" : "com.github.javaparser.ast.visitor.ModifierVisitor.visit", "link" : "parsers\/CountIfStatements.html#visit(n:com.github.javaparser.ast.expr.NameExpr,arg:A):com.github.javaparser.ast.visitor.Visitable", "kind" : "def"}, {"label" : "visit", "tail" : "(n: MethodDeclaration, arg: Void): Visitable", "member" : "com.github.javaparser.ast.visitor.ModifierVisitor.visit", "link" : "parsers\/CountIfStatements.html#visit(n:com.github.javaparser.ast.body.MethodDeclaration,arg:A):com.github.javaparser.ast.visitor.Visitable", "kind" : "def"}, {"label" : "visit", "tail" : "(n: MethodCallExpr, arg: Void): Visitable", "member" : "com.github.javaparser.ast.visitor.ModifierVisitor.visit", "link" : "parsers\/CountIfStatements.html#visit(n:com.github.javaparser.ast.expr.MethodCallExpr,arg:A):com.github.javaparser.ast.visitor.Visitable", "kind" : "def"}, {"label" : "visit", "tail" : "(n: MemberValuePair, arg: Void): Visitable", "member" : "com.github.javaparser.ast.visitor.ModifierVisitor.visit", "link" : "parsers\/CountIfStatements.html#visit(n:com.github.javaparser.ast.expr.MemberValuePair,arg:A):com.github.javaparser.ast.visitor.Visitable", "kind" : "def"}, {"label" : "visit", "tail" : "(n: MarkerAnnotationExpr, arg: Void): Visitable", "member" : "com.github.javaparser.ast.visitor.ModifierVisitor.visit", "link" : "parsers\/CountIfStatements.html#visit(n:com.github.javaparser.ast.expr.MarkerAnnotationExpr,arg:A):com.github.javaparser.ast.visitor.Visitable", "kind" : "def"}, {"label" : "visit", "tail" : "(n: LongLiteralExpr, arg: Void): Visitable", "member" : "com.github.javaparser.ast.visitor.ModifierVisitor.visit", "link" : "parsers\/CountIfStatements.html#visit(n:com.github.javaparser.ast.expr.LongLiteralExpr,arg:A):com.github.javaparser.ast.visitor.Visitable", "kind" : "def"}, {"label" : "visit", "tail" : "(n: LabeledStmt, arg: Void): Visitable", "member" : "com.github.javaparser.ast.visitor.ModifierVisitor.visit", "link" : "parsers\/CountIfStatements.html#visit(n:com.github.javaparser.ast.stmt.LabeledStmt,arg:A):com.github.javaparser.ast.visitor.Visitable", "kind" : "def"}, {"label" : "visit", "tail" : "(n: JavadocComment, arg: Void): Visitable", "member" : "com.github.javaparser.ast.visitor.ModifierVisitor.visit", "link" : "parsers\/CountIfStatements.html#visit(n:com.github.javaparser.ast.comments.JavadocComment,arg:A):com.github.javaparser.ast.visitor.Visitable", "kind" : "def"}, {"label" : "visit", "tail" : "(n: IntegerLiteralExpr, arg: Void): Visitable", "member" : "com.github.javaparser.ast.visitor.ModifierVisitor.visit", "link" : "parsers\/CountIfStatements.html#visit(n:com.github.javaparser.ast.expr.IntegerLiteralExpr,arg:A):com.github.javaparser.ast.visitor.Visitable", "kind" : "def"}, {"label" : "visit", "tail" : "(n: InstanceOfExpr, arg: Void): Visitable", "member" : "com.github.javaparser.ast.visitor.ModifierVisitor.visit", "link" : "parsers\/CountIfStatements.html#visit(n:com.github.javaparser.ast.expr.InstanceOfExpr,arg:A):com.github.javaparser.ast.visitor.Visitable", "kind" : "def"}, {"label" : "visit", "tail" : "(n: InitializerDeclaration, arg: Void): Visitable", "member" : "com.github.javaparser.ast.visitor.ModifierVisitor.visit", "link" : "parsers\/CountIfStatements.html#visit(n:com.github.javaparser.ast.body.InitializerDeclaration,arg:A):com.github.javaparser.ast.visitor.Visitable", "kind" : "def"}, {"label" : "visit", "tail" : "(n: ForStmt, arg: Void): Visitable", "member" : "com.github.javaparser.ast.visitor.ModifierVisitor.visit", "link" : "parsers\/CountIfStatements.html#visit(n:com.github.javaparser.ast.stmt.ForStmt,arg:A):com.github.javaparser.ast.visitor.Visitable", "kind" : "def"}, {"label" : "visit", "tail" : "(n: ForEachStmt, arg: Void): Visitable", "member" : "com.github.javaparser.ast.visitor.ModifierVisitor.visit", "link" : "parsers\/CountIfStatements.html#visit(n:com.github.javaparser.ast.stmt.ForEachStmt,arg:A):com.github.javaparser.ast.visitor.Visitable", "kind" : "def"}, {"label" : "visit", "tail" : "(n: FieldDeclaration, arg: Void): Visitable", "member" : "com.github.javaparser.ast.visitor.ModifierVisitor.visit", "link" : "parsers\/CountIfStatements.html#visit(n:com.github.javaparser.ast.body.FieldDeclaration,arg:A):com.github.javaparser.ast.visitor.Visitable", "kind" : "def"}, {"label" : "visit", "tail" : "(n: FieldAccessExpr, arg: Void): Visitable", "member" : "com.github.javaparser.ast.visitor.ModifierVisitor.visit", "link" : "parsers\/CountIfStatements.html#visit(n:com.github.javaparser.ast.expr.FieldAccessExpr,arg:A):com.github.javaparser.ast.visitor.Visitable", "kind" : "def"}, {"label" : "visit", "tail" : "(n: ExpressionStmt, arg: Void): Visitable", "member" : "com.github.javaparser.ast.visitor.ModifierVisitor.visit", "link" : "parsers\/CountIfStatements.html#visit(n:com.github.javaparser.ast.stmt.ExpressionStmt,arg:A):com.github.javaparser.ast.visitor.Visitable", "kind" : "def"}, {"label" : "visit", "tail" : "(n: ExplicitConstructorInvocationStmt, arg: Void): Visitable", "member" : "com.github.javaparser.ast.visitor.ModifierVisitor.visit", "link" : "parsers\/CountIfStatements.html#visit(n:com.github.javaparser.ast.stmt.ExplicitConstructorInvocationStmt,arg:A):com.github.javaparser.ast.visitor.Visitable", "kind" : "def"}, {"label" : "visit", "tail" : "(n: EnumDeclaration, arg: Void): Visitable", "member" : "com.github.javaparser.ast.visitor.ModifierVisitor.visit", "link" : "parsers\/CountIfStatements.html#visit(n:com.github.javaparser.ast.body.EnumDeclaration,arg:A):com.github.javaparser.ast.visitor.Visitable", "kind" : "def"}, {"label" : "visit", "tail" : "(n: EnumConstantDeclaration, arg: Void): Visitable", "member" : "com.github.javaparser.ast.visitor.ModifierVisitor.visit", "link" : "parsers\/CountIfStatements.html#visit(n:com.github.javaparser.ast.body.EnumConstantDeclaration,arg:A):com.github.javaparser.ast.visitor.Visitable", "kind" : "def"}, {"label" : "visit", "tail" : "(n: EnclosedExpr, arg: Void): Visitable", "member" : "com.github.javaparser.ast.visitor.ModifierVisitor.visit", "link" : "parsers\/CountIfStatements.html#visit(n:com.github.javaparser.ast.expr.EnclosedExpr,arg:A):com.github.javaparser.ast.visitor.Visitable", "kind" : "def"}, {"label" : "visit", "tail" : "(n: EmptyStmt, arg: Void): Visitable", "member" : "com.github.javaparser.ast.visitor.ModifierVisitor.visit", "link" : "parsers\/CountIfStatements.html#visit(n:com.github.javaparser.ast.stmt.EmptyStmt,arg:A):com.github.javaparser.ast.visitor.Visitable", "kind" : "def"}, {"label" : "visit", "tail" : "(n: DoubleLiteralExpr, arg: Void): Visitable", "member" : "com.github.javaparser.ast.visitor.ModifierVisitor.visit", "link" : "parsers\/CountIfStatements.html#visit(n:com.github.javaparser.ast.expr.DoubleLiteralExpr,arg:A):com.github.javaparser.ast.visitor.Visitable", "kind" : "def"}, {"label" : "visit", "tail" : "(n: DoStmt, arg: Void): Visitable", "member" : "com.github.javaparser.ast.visitor.ModifierVisitor.visit", "link" : "parsers\/CountIfStatements.html#visit(n:com.github.javaparser.ast.stmt.DoStmt,arg:A):com.github.javaparser.ast.visitor.Visitable", "kind" : "def"}, {"label" : "visit", "tail" : "(n: ContinueStmt, arg: Void): Visitable", "member" : "com.github.javaparser.ast.visitor.ModifierVisitor.visit", "link" : "parsers\/CountIfStatements.html#visit(n:com.github.javaparser.ast.stmt.ContinueStmt,arg:A):com.github.javaparser.ast.visitor.Visitable", "kind" : "def"}, {"label" : "visit", "tail" : "(n: CompactConstructorDeclaration, arg: Void): Visitable", "member" : "com.github.javaparser.ast.visitor.ModifierVisitor.visit", "link" : "parsers\/CountIfStatements.html#visit(n:com.github.javaparser.ast.body.CompactConstructorDeclaration,arg:A):com.github.javaparser.ast.visitor.Visitable", "kind" : "def"}, {"label" : "visit", "tail" : "(n: ConstructorDeclaration, arg: Void): Visitable", "member" : "com.github.javaparser.ast.visitor.ModifierVisitor.visit", "link" : "parsers\/CountIfStatements.html#visit(n:com.github.javaparser.ast.body.ConstructorDeclaration,arg:A):com.github.javaparser.ast.visitor.Visitable", "kind" : "def"}, {"label" : "visit", "tail" : "(n: ConditionalExpr, arg: Void): Visitable", "member" : "com.github.javaparser.ast.visitor.ModifierVisitor.visit", "link" : "parsers\/CountIfStatements.html#visit(n:com.github.javaparser.ast.expr.ConditionalExpr,arg:A):com.github.javaparser.ast.visitor.Visitable", "kind" : "def"}, {"label" : "visit", "tail" : "(n: CompilationUnit, arg: Void): Visitable", "member" : "com.github.javaparser.ast.visitor.ModifierVisitor.visit", "link" : "parsers\/CountIfStatements.html#visit(n:com.github.javaparser.ast.CompilationUnit,arg:A):com.github.javaparser.ast.visitor.Visitable", "kind" : "def"}, {"label" : "visit", "tail" : "(n: ClassOrInterfaceType, arg: Void): Visitable", "member" : "com.github.javaparser.ast.visitor.ModifierVisitor.visit", "link" : "parsers\/CountIfStatements.html#visit(n:com.github.javaparser.ast.type.ClassOrInterfaceType,arg:A):com.github.javaparser.ast.visitor.Visitable", "kind" : "def"}, {"label" : "visit", "tail" : "(n: RecordDeclaration, arg: Void): Visitable", "member" : "com.github.javaparser.ast.visitor.ModifierVisitor.visit", "link" : "parsers\/CountIfStatements.html#visit(n:com.github.javaparser.ast.body.RecordDeclaration,arg:A):com.github.javaparser.ast.visitor.Visitable", "kind" : "def"}, {"label" : "visit", "tail" : "(n: ClassOrInterfaceDeclaration, arg: Void): Visitable", "member" : "com.github.javaparser.ast.visitor.ModifierVisitor.visit", "link" : "parsers\/CountIfStatements.html#visit(n:com.github.javaparser.ast.body.ClassOrInterfaceDeclaration,arg:A):com.github.javaparser.ast.visitor.Visitable", "kind" : "def"}, {"label" : "visit", "tail" : "(n: ClassExpr, arg: Void): Visitable", "member" : "com.github.javaparser.ast.visitor.ModifierVisitor.visit", "link" : "parsers\/CountIfStatements.html#visit(n:com.github.javaparser.ast.expr.ClassExpr,arg:A):com.github.javaparser.ast.visitor.Visitable", "kind" : "def"}, {"label" : "visit", "tail" : "(n: CharLiteralExpr, arg: Void): Visitable", "member" : "com.github.javaparser.ast.visitor.ModifierVisitor.visit", "link" : "parsers\/CountIfStatements.html#visit(n:com.github.javaparser.ast.expr.CharLiteralExpr,arg:A):com.github.javaparser.ast.visitor.Visitable", "kind" : "def"}, {"label" : "visit", "tail" : "(n: CatchClause, arg: Void): Visitable", "member" : "com.github.javaparser.ast.visitor.ModifierVisitor.visit", "link" : "parsers\/CountIfStatements.html#visit(n:com.github.javaparser.ast.stmt.CatchClause,arg:A):com.github.javaparser.ast.visitor.Visitable", "kind" : "def"}, {"label" : "visit", "tail" : "(n: CastExpr, arg: Void): Visitable", "member" : "com.github.javaparser.ast.visitor.ModifierVisitor.visit", "link" : "parsers\/CountIfStatements.html#visit(n:com.github.javaparser.ast.expr.CastExpr,arg:A):com.github.javaparser.ast.visitor.Visitable", "kind" : "def"}, {"label" : "visit", "tail" : "(n: BreakStmt, arg: Void): Visitable", "member" : "com.github.javaparser.ast.visitor.ModifierVisitor.visit", "link" : "parsers\/CountIfStatements.html#visit(n:com.github.javaparser.ast.stmt.BreakStmt,arg:A):com.github.javaparser.ast.visitor.Visitable", "kind" : "def"}, {"label" : "visit", "tail" : "(n: BooleanLiteralExpr, arg: Void): Visitable", "member" : "com.github.javaparser.ast.visitor.ModifierVisitor.visit", "link" : "parsers\/CountIfStatements.html#visit(n:com.github.javaparser.ast.expr.BooleanLiteralExpr,arg:A):com.github.javaparser.ast.visitor.Visitable", "kind" : "def"}, {"label" : "visit", "tail" : "(n: BlockStmt, arg: Void): Visitable", "member" : "com.github.javaparser.ast.visitor.ModifierVisitor.visit", "link" : "parsers\/CountIfStatements.html#visit(n:com.github.javaparser.ast.stmt.BlockStmt,arg:A):com.github.javaparser.ast.visitor.Visitable", "kind" : "def"}, {"label" : "visit", "tail" : "(n: BinaryExpr, arg: Void): Visitable", "member" : "com.github.javaparser.ast.visitor.ModifierVisitor.visit", "link" : "parsers\/CountIfStatements.html#visit(n:com.github.javaparser.ast.expr.BinaryExpr,arg:A):com.github.javaparser.ast.visitor.Visitable", "kind" : "def"}, {"label" : "visit", "tail" : "(n: AssignExpr, arg: Void): Visitable", "member" : "com.github.javaparser.ast.visitor.ModifierVisitor.visit", "link" : "parsers\/CountIfStatements.html#visit(n:com.github.javaparser.ast.expr.AssignExpr,arg:A):com.github.javaparser.ast.visitor.Visitable", "kind" : "def"}, {"label" : "visit", "tail" : "(n: AssertStmt, arg: Void): Visitable", "member" : "com.github.javaparser.ast.visitor.ModifierVisitor.visit", "link" : "parsers\/CountIfStatements.html#visit(n:com.github.javaparser.ast.stmt.AssertStmt,arg:A):com.github.javaparser.ast.visitor.Visitable", "kind" : "def"}, {"label" : "visit", "tail" : "(n: ArrayInitializerExpr, arg: Void): Visitable", "member" : "com.github.javaparser.ast.visitor.ModifierVisitor.visit", "link" : "parsers\/CountIfStatements.html#visit(n:com.github.javaparser.ast.expr.ArrayInitializerExpr,arg:A):com.github.javaparser.ast.visitor.Visitable", "kind" : "def"}, {"label" : "visit", "tail" : "(n: ArrayCreationExpr, arg: Void): Visitable", "member" : "com.github.javaparser.ast.visitor.ModifierVisitor.visit", "link" : "parsers\/CountIfStatements.html#visit(n:com.github.javaparser.ast.expr.ArrayCreationExpr,arg:A):com.github.javaparser.ast.visitor.Visitable", "kind" : "def"}, {"label" : "visit", "tail" : "(n: ArrayAccessExpr, arg: Void): Visitable", "member" : "com.github.javaparser.ast.visitor.ModifierVisitor.visit", "link" : "parsers\/CountIfStatements.html#visit(n:com.github.javaparser.ast.expr.ArrayAccessExpr,arg:A):com.github.javaparser.ast.visitor.Visitable", "kind" : "def"}, {"label" : "visit", "tail" : "(n: AnnotationMemberDeclaration, arg: Void): Visitable", "member" : "com.github.javaparser.ast.visitor.ModifierVisitor.visit", "link" : "parsers\/CountIfStatements.html#visit(n:com.github.javaparser.ast.body.AnnotationMemberDeclaration,arg:A):com.github.javaparser.ast.visitor.Visitable", "kind" : "def"}, {"label" : "visit", "tail" : "(n: AnnotationDeclaration, arg: Void): Visitable", "member" : "com.github.javaparser.ast.visitor.ModifierVisitor.visit", "link" : "parsers\/CountIfStatements.html#visit(n:com.github.javaparser.ast.body.AnnotationDeclaration,arg:A):com.github.javaparser.ast.visitor.Visitable", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "parsers\/CountIfStatements.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "parsers\/CountIfStatements.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "parsers\/CountIfStatements.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "parsers\/CountIfStatements.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "parsers\/CountIfStatements.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "parsers\/CountIfStatements.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "parsers\/CountIfStatements.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "parsers\/CountIfStatements.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "parsers\/CountIfStatements.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "parsers\/CountIfStatements.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "parsers\/CountIfStatements.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "parsers\/CountIfStatements.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "parsers\/CountIfStatements.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "parsers\/CountIfStatements.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "parsers\/CountIfStatements.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "parsers\/CountIfStatements.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "parsers\/CountIfStatements.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "parsers\/CountIfStatements.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "parsers\/CountIfStatements.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "parsers\/CountIfStatements.html", "kind" : "class"}, {"name" : "parsers.ExplParser", "shortDescription" : "", "object" : "parsers\/ExplParser$.html", "members_object" : [{"label" : "main", "tail" : "(args: Array[String]): Unit", "member" : "parsers.ExplParser.main", "link" : "parsers\/ExplParser$.html#main(args:Array[String]):Unit", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "parsers\/ExplParser$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "parsers\/ExplParser$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "parsers\/ExplParser$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "parsers\/ExplParser$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "parsers\/ExplParser$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "parsers\/ExplParser$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "parsers\/ExplParser$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "parsers\/ExplParser$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "parsers\/ExplParser$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "parsers\/ExplParser$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "parsers\/ExplParser$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "parsers\/ExplParser$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "parsers\/ExplParser$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "parsers\/ExplParser$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "parsers\/ExplParser$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "parsers\/ExplParser$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "parsers\/ExplParser$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "parsers\/ExplParser$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "parsers\/ExplParser$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "parsers.GenericParser", "shortDescription" : "", "members_class" : [{"label" : "counter", "tail" : ": CountIfStatements", "member" : "parsers.GenericParser.counter", "link" : "parsers\/GenericParser.html#counter:parsers.CountIfStatements", "kind" : "val"}, {"label" : "cu", "tail" : ": CompilationUnit", "member" : "parsers.GenericParser.cu", "link" : "parsers\/GenericParser.html#cu:com.github.javaparser.ast.CompilationUnit", "kind" : "val"}, {"label" : "sourceRoot", "tail" : ": SourceRoot", "member" : "parsers.GenericParser.sourceRoot", "link" : "parsers\/GenericParser.html#sourceRoot:com.github.javaparser.utils.SourceRoot", "kind" : "val"}, {"member" : "parsers.GenericParser#<init>", "error" : "unsupported entity"}, {"label" : "root", "tail" : ": Path", "member" : "parsers.GenericParser.root", "link" : "parsers\/GenericParser.html#root:java.nio.file.Path", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "parsers\/GenericParser.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "parsers\/GenericParser.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "parsers\/GenericParser.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "parsers\/GenericParser.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "parsers\/GenericParser.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "parsers\/GenericParser.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "parsers\/GenericParser.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "parsers\/GenericParser.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "parsers\/GenericParser.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "parsers\/GenericParser.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "parsers\/GenericParser.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "parsers\/GenericParser.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "parsers\/GenericParser.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "parsers\/GenericParser.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "parsers\/GenericParser.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "parsers\/GenericParser.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "parsers\/GenericParser.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "parsers\/GenericParser.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "parsers\/GenericParser.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "parsers\/GenericParser.html", "kind" : "class"}], "ml.fairness" : [{"name" : "ml.fairness.BaseMetrics", "shortDescription" : "", "object" : "ml\/fairness\/BaseMetrics$.html", "members_object" : [{"label" : "selectionRate", "tail" : "(trueLabels: Array[Int], predictedLabels: Array[Int]): Double", "member" : "ml.fairness.BaseMetrics.selectionRate", "link" : "ml\/fairness\/BaseMetrics$.html#selectionRate(trueLabels:Array[Int],predictedLabels:Array[Int]):Double", "kind" : "def"}, {"label" : "Disparity", "tail" : "", "member" : "ml.fairness.BaseMetrics.Disparity", "link" : "ml\/fairness\/BaseMetrics$.html#Disparity=(Array[Int],Array[Int])=>Double", "kind" : "type"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ml\/fairness\/BaseMetrics$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ml\/fairness\/BaseMetrics$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ml\/fairness\/BaseMetrics$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ml\/fairness\/BaseMetrics$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ml\/fairness\/BaseMetrics$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ml\/fairness\/BaseMetrics$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ml\/fairness\/BaseMetrics$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/fairness\/BaseMetrics$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/fairness\/BaseMetrics$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/fairness\/BaseMetrics$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ml\/fairness\/BaseMetrics$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ml\/fairness\/BaseMetrics$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ml\/fairness\/BaseMetrics$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ml\/fairness\/BaseMetrics$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ml\/fairness\/BaseMetrics$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ml\/fairness\/BaseMetrics$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ml\/fairness\/BaseMetrics$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ml\/fairness\/BaseMetrics$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ml\/fairness\/BaseMetrics$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "ml.fairness.CounterfactualFairness", "shortDescription" : "Generates a counterfactually fair model.", "members_class" : [{"label" : "calculate", "tail" : "(protectedFeatures: Array[String], variableFeatures: Array[String], target: String): LinearModel", "member" : "ml.fairness.CounterfactualFairness.calculate", "link" : "ml\/fairness\/CounterfactualFairness.html#calculate(protectedFeatures:Array[String],variableFeatures:Array[String],target:String):smile.regression.LinearModel", "kind" : "def"}, {"member" : "ml.fairness.CounterfactualFairness#<init>", "error" : "unsupported entity"}, {"label" : "data", "tail" : ": DataFrame", "member" : "ml.fairness.CounterfactualFairness.data", "link" : "ml\/fairness\/CounterfactualFairness.html#data:smile.data.DataFrame", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ml\/fairness\/CounterfactualFairness.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ml\/fairness\/CounterfactualFairness.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ml\/fairness\/CounterfactualFairness.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ml\/fairness\/CounterfactualFairness.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ml\/fairness\/CounterfactualFairness.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ml\/fairness\/CounterfactualFairness.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ml\/fairness\/CounterfactualFairness.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/fairness\/CounterfactualFairness.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/fairness\/CounterfactualFairness.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/fairness\/CounterfactualFairness.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ml\/fairness\/CounterfactualFairness.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ml\/fairness\/CounterfactualFairness.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ml\/fairness\/CounterfactualFairness.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ml\/fairness\/CounterfactualFairness.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ml\/fairness\/CounterfactualFairness.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ml\/fairness\/CounterfactualFairness.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ml\/fairness\/CounterfactualFairness.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ml\/fairness\/CounterfactualFairness.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ml\/fairness\/CounterfactualFairness.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "ml\/fairness\/CounterfactualFairness.html", "kind" : "class"}, {"name" : "ml.fairness.FairnessMetrics", "shortDescription" : "", "members_class" : [{"label" : "parityLoss", "tail" : "(protectedAttribute: String): Iterable[ParityLoss]", "member" : "ml.fairness.FairnessMetrics.parityLoss", "link" : "ml\/fairness\/FairnessMetrics.html#parityLoss(protectedAttribute:String):scala.collection.immutable.Iterable[ml.fairness.ParityLoss]", "kind" : "def"}, {"label" : "predictions", "tail" : ": Array[Array[Int]]", "member" : "ml.fairness.FairnessMetrics.predictions", "link" : "ml\/fairness\/FairnessMetrics.html#predictions:Array[Array[Int]]", "kind" : "val"}, {"member" : "ml.fairness.FairnessMetrics#<init>", "error" : "unsupported entity"}, {"label" : "df", "tail" : ": DataFrame", "member" : "ml.fairness.FairnessMetrics.df", "link" : "ml\/fairness\/FairnessMetrics.html#df:smile.data.DataFrame", "kind" : "val"}, {"label" : "model", "tail" : ": DataFrameClassifier", "member" : "ml.fairness.FairnessMetrics.model", "link" : "ml\/fairness\/FairnessMetrics.html#model:smile.classification.DataFrameClassifier", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ml\/fairness\/FairnessMetrics.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ml\/fairness\/FairnessMetrics.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ml\/fairness\/FairnessMetrics.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ml\/fairness\/FairnessMetrics.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ml\/fairness\/FairnessMetrics.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ml\/fairness\/FairnessMetrics.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ml\/fairness\/FairnessMetrics.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/fairness\/FairnessMetrics.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/fairness\/FairnessMetrics.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/fairness\/FairnessMetrics.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ml\/fairness\/FairnessMetrics.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ml\/fairness\/FairnessMetrics.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ml\/fairness\/FairnessMetrics.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ml\/fairness\/FairnessMetrics.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ml\/fairness\/FairnessMetrics.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ml\/fairness\/FairnessMetrics.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ml\/fairness\/FairnessMetrics.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ml\/fairness\/FairnessMetrics.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ml\/fairness\/FairnessMetrics.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "ml\/fairness\/FairnessMetrics.html", "kind" : "class"}, {"name" : "ml.fairness.Metrics", "shortDescription" : "", "object" : "ml\/fairness\/Metrics$.html", "members_object" : [{"label" : "demographicParityRatio", "tail" : "(data: DataFrame, protectedAttribute: String, predicted: String, trueValue: String): Double", "member" : "ml.fairness.Metrics.demographicParityRatio", "link" : "ml\/fairness\/Metrics$.html#demographicParityRatio(data:smile.data.DataFrame,protectedAttribute:String,predicted:String,trueValue:String):Double", "kind" : "def"}, {"label" : "demographicParityDifference", "tail" : "(data: DataFrame, protectedAttribute: String, predicted: String, trueValue: String): Double", "member" : "ml.fairness.Metrics.demographicParityDifference", "link" : "ml\/fairness\/Metrics$.html#demographicParityDifference(data:smile.data.DataFrame,protectedAttribute:String,predicted:String,trueValue:String):Double", "kind" : "def"}, {"label" : "demographicParity", "tail" : "(data: DataFrame, protectedAttribute: String, predicted: String, trueValue: String): Map[String, Double]", "member" : "ml.fairness.Metrics.demographicParity", "link" : "ml\/fairness\/Metrics$.html#demographicParity(data:smile.data.DataFrame,protectedAttribute:String,predicted:String,trueValue:String):Map[String,Double]", "kind" : "def"}, {"label" : "equalisedOddsRatio", "tail" : "(data: DataFrame, protectedAttribute: String, predicted: String, trueValue: String): Double", "member" : "ml.fairness.Metrics.equalisedOddsRatio", "link" : "ml\/fairness\/Metrics$.html#equalisedOddsRatio(data:smile.data.DataFrame,protectedAttribute:String,predicted:String,trueValue:String):Double", "kind" : "def"}, {"label" : "equalisedOddsDifference", "tail" : "(data: DataFrame, protectedAttribute: String, predicted: String, trueValue: String): Double", "member" : "ml.fairness.Metrics.equalisedOddsDifference", "link" : "ml\/fairness\/Metrics$.html#equalisedOddsDifference(data:smile.data.DataFrame,protectedAttribute:String,predicted:String,trueValue:String):Double", "kind" : "def"}, {"label" : "trueNegativeRateRatio", "tail" : "(data: DataFrame, protectedAttribute: String, predicted: String, trueValue: String): Double", "member" : "ml.fairness.Metrics.trueNegativeRateRatio", "link" : "ml\/fairness\/Metrics$.html#trueNegativeRateRatio(data:smile.data.DataFrame,protectedAttribute:String,predicted:String,trueValue:String):Double", "kind" : "def"}, {"label" : "truePositiveRateRatio", "tail" : "(data: DataFrame, protectedAttribute: String, predicted: String, trueValue: String): Double", "member" : "ml.fairness.Metrics.truePositiveRateRatio", "link" : "ml\/fairness\/Metrics$.html#truePositiveRateRatio(data:smile.data.DataFrame,protectedAttribute:String,predicted:String,trueValue:String):Double", "kind" : "def"}, {"label" : "trueNegativeRateDifference", "tail" : "(data: DataFrame, protectedAttribute: String, predicted: String, trueValue: String): Double", "member" : "ml.fairness.Metrics.trueNegativeRateDifference", "link" : "ml\/fairness\/Metrics$.html#trueNegativeRateDifference(data:smile.data.DataFrame,protectedAttribute:String,predicted:String,trueValue:String):Double", "kind" : "def"}, {"label" : "truePositiveRateDifference", "tail" : "(data: DataFrame, protectedAttribute: String, predicted: String, trueValue: String): Double", "member" : "ml.fairness.Metrics.truePositiveRateDifference", "link" : "ml\/fairness\/Metrics$.html#truePositiveRateDifference(data:smile.data.DataFrame,protectedAttribute:String,predicted:String,trueValue:String):Double", "kind" : "def"}, {"label" : "trueNegativeRate", "tail" : "(data: DataFrame, protectedAttribute: String, predicted: String, trueValue: String): Map[String, Double]", "member" : "ml.fairness.Metrics.trueNegativeRate", "link" : "ml\/fairness\/Metrics$.html#trueNegativeRate(data:smile.data.DataFrame,protectedAttribute:String,predicted:String,trueValue:String):Map[String,Double]", "kind" : "def"}, {"label" : "truePositiveRate", "tail" : "(data: DataFrame, protectedAttribute: String, predicted: String, trueValue: String): Map[String, Double]", "member" : "ml.fairness.Metrics.truePositiveRate", "link" : "ml\/fairness\/Metrics$.html#truePositiveRate(data:smile.data.DataFrame,protectedAttribute:String,predicted:String,trueValue:String):Map[String,Double]", "kind" : "def"}, {"label" : "extendDfWithPredictions", "tail" : "(data: DataFrame, model: DataFrameClassifier, predictionColumn: String): DataFrame", "member" : "ml.fairness.Metrics.extendDfWithPredictions", "link" : "ml\/fairness\/Metrics$.html#extendDfWithPredictions(data:smile.data.DataFrame,model:smile.classification.DataFrameClassifier,predictionColumn:String):smile.data.DataFrame", "kind" : "def"}, {"label" : "groupByProtected", "tail" : "(data: DataFrame, protectedAttribute: String): Map[String, DataFrame]", "member" : "ml.fairness.Metrics.groupByProtected", "link" : "ml\/fairness\/Metrics$.html#groupByProtected(data:smile.data.DataFrame,protectedAttribute:String):Map[String,smile.data.DataFrame]", "kind" : "def"}, {"label" : "GroupDisparity", "tail" : "", "member" : "ml.fairness.Metrics.GroupDisparity", "link" : "ml\/fairness\/Metrics$.html#GroupDisparity=(smile.data.DataFrame,String,String,String)=>Map[String,Double]", "kind" : "type"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ml\/fairness\/Metrics$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ml\/fairness\/Metrics$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ml\/fairness\/Metrics$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ml\/fairness\/Metrics$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ml\/fairness\/Metrics$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ml\/fairness\/Metrics$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ml\/fairness\/Metrics$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/fairness\/Metrics$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/fairness\/Metrics$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/fairness\/Metrics$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ml\/fairness\/Metrics$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ml\/fairness\/Metrics$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ml\/fairness\/Metrics$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ml\/fairness\/Metrics$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ml\/fairness\/Metrics$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ml\/fairness\/Metrics$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ml\/fairness\/Metrics$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ml\/fairness\/Metrics$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ml\/fairness\/Metrics$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "ml.fairness.ParityLoss", "shortDescription" : "", "members_case class" : [{"member" : "ml.fairness.ParityLoss#<init>", "error" : "unsupported entity"}, {"label" : "value", "tail" : ": Double", "member" : "ml.fairness.ParityLoss.value", "link" : "ml\/fairness\/ParityLoss.html#value:Double", "kind" : "val"}, {"label" : "outcome", "tail" : ": String", "member" : "ml.fairness.ParityLoss.outcome", "link" : "ml\/fairness\/ParityLoss.html#outcome:String", "kind" : "val"}, {"label" : "level", "tail" : ": String", "member" : "ml.fairness.ParityLoss.level", "link" : "ml\/fairness\/ParityLoss.html#level:String", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ml\/fairness\/ParityLoss.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ml\/fairness\/ParityLoss.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ml\/fairness\/ParityLoss.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ml\/fairness\/ParityLoss.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ml\/fairness\/ParityLoss.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ml\/fairness\/ParityLoss.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ml\/fairness\/ParityLoss.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ml\/fairness\/ParityLoss.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/fairness\/ParityLoss.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/fairness\/ParityLoss.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/fairness\/ParityLoss.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ml\/fairness\/ParityLoss.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ml\/fairness\/ParityLoss.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ml\/fairness\/ParityLoss.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ml\/fairness\/ParityLoss.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ml\/fairness\/ParityLoss.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ml\/fairness\/ParityLoss.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ml\/fairness\/ParityLoss.html", "kind" : "case class"}]};