<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Index on Rui Vieira</title>
    <link>https://ruivieira.dev/</link>
    <description>Recent content in Index on Rui Vieira</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-uk</language>
    <lastBuildDate>Thu, 23 Dec 2021 18:29:53 +0000</lastBuildDate><atom:link href="https://ruivieira.dev/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>(Semi) handcrafted RSS</title>
      <link>https://ruivieira.dev/semi-handcrafted-rss.html</link>
      <pubDate>Sun, 28 Nov 2021 15:21:54 +0000</pubDate>
      
      <guid>https://ruivieira.dev/semi-handcrafted-rss.html</guid>
      <description>I&amp;rsquo;ve been using a minimalist blog setup for some time now.
I was having something of a framework fatigue after switching between a few static site generators. Each new generator I decided to try implied usually either learning a new programming language (Python, Ruby, Go) to perform basic setup and a new template engine syntax1. Typically I wasn&amp;rsquo;t using the vast majority of the features available for each generator. And finally, most of the generators I tried over the years rely on heavy configuration if I want to maintain the site organisation and look.</description>
    </item>
    
    <item>
      <title>58 bytes of CSS to look great nearly everywhere</title>
      <link>https://ruivieira.dev/58-bytes-of-css-to-look-great-nearly-everywhere.html</link>
      <pubDate>Sun, 26 Dec 2021 20:26:48 +0000</pubDate>
      
      <guid>https://ruivieira.dev/58-bytes-of-css-to-look-great-nearly-everywhere.html</guid>
      <description>The original page seems to have disappeared from the Internet1 (see: link rot), so the original contents are kept here.
When making this website, I wanted a simple, reasonable way to make it look good on most displays. Not counting any minimization techniques, the following 58 bytes worked well for me:
main { max-width: 38rem; padding: 2rem; margin: auto; } Let&amp;rsquo;s break this down.
  max-width: 38rem It appears that the default font size for most browsers is 16px, so 38rem is 608px.</description>
    </item>
    
    <item>
      <title>A Gibbs Sampler in Crystal</title>
      <link>https://ruivieira.dev/a-gibbs-sampler-in-crystal.html</link>
      <pubDate>Tue, 07 Dec 2021 21:49:31 +0000</pubDate>
      
      <guid>https://ruivieira.dev/a-gibbs-sampler-in-crystal.html</guid>
      <description>Recently, I&amp;rsquo;ve been following with interest the development of the Crystal language.
Crystal is a statically type language with a syntax resembling Ruby&amp;rsquo;s. The main features which drawn me to it were its simple boilerplate-free syntax (which is ideal for quick prototyping), tied with the ability to compile directly to native code along with a dead simple way of creating bindings to existing C code.
These features make it quite attractive, in my opinion, for scientific computing.</description>
    </item>
    
    <item>
      <title>A simple Python benchmark exercise</title>
      <link>https://ruivieira.dev/a-simple-python-benchmark-exercise.html</link>
      <pubDate>Sun, 28 Nov 2021 15:21:54 +0000</pubDate>
      
      <guid>https://ruivieira.dev/a-simple-python-benchmark-exercise.html</guid>
      <description>Recently when discussing the Crystal language and specifically the Gibbs sample blog post with a colleague, he mentioned that the Python benchmark numbers looked a bit off and not consistent with his experience of numerical programming in Python.
To recall, the numbers were:
   Language Time(s)     &amp;mdash;&amp;mdash;&amp;ndash; &amp;mdash;&amp;mdash;-   R 364.8   Python 144.0   Scala 9.896   Crystal 5.171   C 5.</description>
    </item>
    
    <item>
      <title>A streaming ALS implementation</title>
      <link>https://ruivieira.dev/a-streaming-als-implementation.html</link>
      <pubDate>Thu, 09 Dec 2021 10:26:03 +0000</pubDate>
      
      <guid>https://ruivieira.dev/a-streaming-als-implementation.html</guid>
      <description>In this blog post I would like to talk a little bit about recommendation engines in general and how to build a streaming recommendation engine on top of Apache Spark.
I will start by introducing the concept of collaborative filterig, and focus in two variants: batch and streaming Alternating Least Squares (ALS). I will look at the principles of a streaming distributed recommendation engine on Spark and finally, I&amp;rsquo;ll talk about practical issues when using these methods.</description>
    </item>
    
    <item>
      <title>Ansible</title>
      <link>https://ruivieira.dev/ansible.html</link>
      <pubDate>Tue, 07 Dec 2021 21:49:31 +0000</pubDate>
      
      <guid>https://ruivieira.dev/ansible.html</guid>
      <description>Ansible notes.
Installation Debian/Ubuntu $ sudo apt update $ sudo apt install software-properties-common $ sudo add-apt-repository --yes --update ppa:ansible/ansible $ sudo apt install ansible Reference </description>
    </item>
    
    <item>
      <title>Bayesian estimation of changepoints</title>
      <link>https://ruivieira.dev/bayesian-estimation-of-changepoints.html</link>
      <pubDate>Sun, 28 Nov 2021 15:21:54 +0000</pubDate>
      
      <guid>https://ruivieira.dev/bayesian-estimation-of-changepoints.html</guid>
      <description>A common introductory problem in Bayesian changepoint detection is the record of UK coal mining disasters from 1851 to 1962. More information can be found in Carlin, Gelfand and Smith (1992).
As we can see from the plot below, the number of yearly disasters ranges from 0 to 6 and we will assume that at some point within this time range a change in the accident rate has occured.
 The number of yearly disasters can be modelled as a Poisson with a unknown rate depending on the changepoint \(k\):</description>
    </item>
    
    <item>
      <title>Bots</title>
      <link>https://ruivieira.dev/bots.html</link>
      <pubDate>Thu, 23 Dec 2021 20:15:49 +0000</pubDate>
      
      <guid>https://ruivieira.dev/bots.html</guid>
      <description>ArXivist  A bot which periodically toots a paper published on ArXiV. The main Mastodon page of the bot can be found at https://botsin.space/@arxivstats. The current queue can be found at https://w6118k.deta.dev/</description>
    </item>
    
    <item>
      <title>Brutalist web design</title>
      <link>https://ruivieira.dev/brutalist-web-design.html</link>
      <pubDate>Sun, 02 Jan 2022 00:49:16 +0000</pubDate>
      
      <guid>https://ruivieira.dev/brutalist-web-design.html</guid>
      <description>The major guidelines of the Brutalist web design¬†1 are:
Content is readable on all reasonable screens and devices üëç This guideline is followed by this site. The vast majority of the pages work with all major browsers, implement a responsive design. They also work with Javascript disabled as described in site details. It even works with unreasonable browsers, screens and devices, such as Internet Explorer 6 (2001) and NCA Mosaic 2 (1993).</description>
    </item>
    
    <item>
      <title>Clojure</title>
      <link>https://ruivieira.dev/clojure.html</link>
      <pubDate>Tue, 07 Dec 2021 21:49:31 +0000</pubDate>
      
      <guid>https://ruivieira.dev/clojure.html</guid>
      <description>Notes on Clojure.
Reference Concatenating strings (require &amp;#39;[clojure.string :as string]) (string/join [&amp;#34;foo&amp;#34; &amp;#34;bar&amp;#34;]) List files recursively To list files recursively in Clojure1
(file-seq &amp;#34;/etc&amp;#34;) Filter by extension (filter #(.endsWith (.toString %) &amp;#34;.conf&amp;#34;) (file-seq &amp;#34;/etc&amp;#34;))) Get home directory def home (System/getProperty &amp;#34;user.home&amp;#34;))   Compare with the Java version.&amp;#160;&amp;#x21a9;&amp;#xfe0e;
   </description>
    </item>
    
    <item>
      <title>Containerised Streaming Data Generation using State-Space Models</title>
      <link>https://ruivieira.dev/containerised-streaming-data-generation-using-state-space-models.html</link>
      <pubDate>Sun, 02 Jan 2022 18:02:33 +0000</pubDate>
      
      <guid>https://ruivieira.dev/containerised-streaming-data-generation-using-state-space-models.html</guid>
      <description>To prototype and test almost any application some type of input data is needed. Getting the right data can be difficult for several reasons, including strict licenses, a considerable amount of data engineering to shape the data to our requirements and the setup of dedicated data producers. Additionally, in modern applications, we are often interested in realtime/streaming and distributed processing of data with platforms such as Apache Kafka and Apache Spark and deployment in a cloud environment like OpenShift with tools such as oshinko.</description>
    </item>
    
    <item>
      <title>Containers</title>
      <link>https://ruivieira.dev/containers.html</link>
      <pubDate>Tue, 07 Dec 2021 21:49:31 +0000</pubDate>
      
      <guid>https://ruivieira.dev/containers.html</guid>
      <description>Notes on containers.
Tips Extract image locally To extract a container&amp;rsquo;s image locally (e.g. using Docker) the following can be used:
docker export $CONTAINER_NAME &amp;gt; output.tar Alternatively, and using the $IMAGE_ID we can do:
docker save $IMAGE_ID$ &amp;gt; output.tar </description>
    </item>
    
    <item>
      <title>Cookiecutter data science</title>
      <link>https://ruivieira.dev/cookiecutter-data-science.html</link>
      <pubDate>Tue, 07 Dec 2021 21:49:31 +0000</pubDate>
      
      <guid>https://ruivieira.dev/cookiecutter-data-science.html</guid>
      <description>Main documentation is available here.
Setup Requirements For the purpose of these instructions we will assume the following are installed:
 Python 3.9.0 virtualenv  A new venv can be created with virtualenv env1 and activated with source venv/bin/activate. Once the environment is active we can install the cookiecutter package using pip install cookiecutter.
The create of the cookiecutter project can be done with
cookiecutter https://github.com/drivendata/cookiecutter-data-science For the remainder of this text we will call the of the project you&amp;rsquo;ve just created as $PROJ.</description>
    </item>
    
    <item>
      <title>Correlation matrix</title>
      <link>https://ruivieira.dev/correlation-matrix.html</link>
      <pubDate>Mon, 03 Jan 2022 21:56:06 +0000</pubDate>
      
      <guid>https://ruivieira.dev/correlation-matrix.html</guid>
      <description>Similarity Let&amp;rsquo;s create two datasets, \(\mu_1\) and \(\mu_2\) such that
\[ \mu_i = \{x_1,\dots,x_n\} \sim \{\mathcal{U}_1(-1,1),\dots,\mathcal{U}_n(-1,1)\} \]
We will use \(N=100\) observations for a vector sized \(n=10\).
import numpy as np import pandas as pd import scipy.stats as stats from scipy.spatial.distance import squareform n = 10 N = 100 np.random.seed(0) mu_1 = np.random.normal(loc=0, scale=1, size=(N, n)) mu_2 = np.random.normal(loc=0, scale=1, size=(N, n)) We now add some noise, \(\epsilon=0.6\), to \(\mu_2\) such that</description>
    </item>
    
    <item>
      <title>Counterfactual Fairness</title>
      <link>https://ruivieira.dev/counterfactual-fairness.html</link>
      <pubDate>Mon, 03 Jan 2022 21:56:06 +0000</pubDate>
      
      <guid>https://ruivieira.dev/counterfactual-fairness.html</guid>
      <description>Building counterfactually fair models Data To evaluate counterfactual fairness we will be using the &amp;ldquo;law school&amp;rdquo; dataset1.
The Law School Admission Council conducted a survey across 163 law schools in the United States. It contains information on 21,790 law students such as their entrance exam scores (LSAT), their grade-point average (GPA) collected prior to law school, and their first year average grade (FYA). Given this data, a school may wish to predict if an applicant will have a high `FYA`.</description>
    </item>
    
    <item>
      <title>Counterfactual Fairness in Java</title>
      <link>https://ruivieira.dev/counterfactual-fairness-in-java.html</link>
      <pubDate>Fri, 03 Dec 2021 18:27:37 +0000</pubDate>
      
      <guid>https://ruivieira.dev/counterfactual-fairness-in-java.html</guid>
      <description>Here we will look at how to build a counterfactually fair model, as detailed in Counterfactual Fairness, specifically the &amp;ldquo;Fair Add&amp;rdquo; model.
This implementation will rely mostly on Apache Commons Math1 linear regression implementations, namely the Ordinary Least Squares (OLS) regression2. We start then by adding the relevant Maven dependencies:
```xml  org.apache.commons commons-math3 3.6.1  ```
Data will be passed as a `RealMatrix`3. This matrix will have dimensions \(N\times f\), where \(N\) is the number of observations and \(f\) is the number of features.</description>
    </item>
    
    <item>
      <title>Counterfactuals</title>
      <link>https://ruivieira.dev/counterfactuals.html</link>
      <pubDate>Thu, 30 Dec 2021 21:21:23 +0000</pubDate>
      
      <guid>https://ruivieira.dev/counterfactuals.html</guid>
      <description>A special type of Explainability.
Desiderata According to Verma et al¬†1 the counterfactual desiderata is:
 Validity Actionability Sparsity Data manifold closeness Causality Amortised inference  Validity We assume that a counterfactual is valid if it solves the optimisation as states in Wachter et al2. If we defined the loss function as
\[ L(x,x^{\prime},y^{\prime},\lambda)=\lambda\cdot(\hat{f}(x^{\prime})‚àíy^{\prime})^2+d(x,x^{\prime}), \]
we can define the counterfactual as
\[ \arg \underset{x^{\prime}}{\min}\underset{\lambda}{\max} \lambda\cdot(\hat{f}(x^{\prime})‚àíy^{\prime})^2+d(x,x^{\prime}) \]
where:
 \(x \in \mathcal{X}\) is the original data point \(x^{\prime} \in \mathcal{X}\) is the counterfactual \(y^{\prime} \in \mathcal{Y}\) is the desired label \(d\) is a [Distance metrics|distance metric]] to measure the distance between \(x\) and \(x^{\prime}\).</description>
    </item>
    
    <item>
      <title>Counterfactuals with Constraint Solvers</title>
      <link>https://ruivieira.dev/counterfactuals-with-constraint-solvers.html</link>
      <pubDate>Wed, 05 Jan 2022 12:05:31 +0000</pubDate>
      
      <guid>https://ruivieira.dev/counterfactuals-with-constraint-solvers.html</guid>
      <description>Scoring An implementation on how to calculate counterfactuals with Constraint Solvers (namely [OptaPlanner]]) is available here.
This implementation satisfies several criteria of the counterfactuals .
The penalisation score is represented with a BendableBigDecimalScore¬†1, having three &amp;ldquo;hard&amp;rdquo; levels and one &amp;ldquo;soft&amp;rdquo; level.
 The first hard level component, 1, penalises the score according to the distance between the prediction, \(y^{\prime}\) for the currently proposed solution, \(x^{\prime}\) and the original prediction \(y\), that is this our \((\hat{f}(x^{\prime})-y^{\prime})^2\).</description>
    </item>
    
    <item>
      <title>Deno</title>
      <link>https://ruivieira.dev/deno.html</link>
      <pubDate>Tue, 07 Dec 2021 21:49:31 +0000</pubDate>
      
      <guid>https://ruivieira.dev/deno.html</guid>
      <description>Installation Fedora To install Deno on Fedora, first download the installation file:
curl -fsSL https://deno.land/x/install/install.sh | sh And then add the following to your shell&amp;rsquo;s profile (e.g. ~/.bashrc):
export DENO_INSTALL=&amp;#34;/home/$USER/.deno&amp;#34; export PATH=&amp;#34;$DENO_INSTALL/bin:$PATH&amp;#34; Topis  Deno types  </description>
    </item>
    
    <item>
      <title>Deno types</title>
      <link>https://ruivieira.dev/deno-types.html</link>
      <pubDate>Tue, 07 Dec 2021 21:49:31 +0000</pubDate>
      
      <guid>https://ruivieira.dev/deno-types.html</guid>
      <description>Union types function add(a: any, b: any) { if (typeof a === &#39;number&#39; &amp;amp;&amp;amp; typeof b === &#39;number&#39;) { return a + b; } if (typeof a === &#39;string&#39; &amp;amp;&amp;amp; typeof b === &#39;string&#39;) { return a.concat(b); } throw new Error(&#39;Parameters must be numbers or strings&#39;); } return add(true, false); error: TS2345 [ERROR]: Argument of type &amp;lsquo;boolean&amp;rsquo; is not assignable to parameter of type &amp;lsquo;string | number&amp;rsquo;. console.log(add(true, false));})())));
function add(a: number | string, b: number | string) { if (typeof a === &#39;number&#39; &amp;amp;&amp;amp; typeof b === &#39;number&#39;) { return a + b; } if (typeof a === &#39;string&#39; &amp;amp;&amp;amp; typeof b === &#39;string&#39;) { return a.</description>
    </item>
    
    <item>
      <title>Digital Garden Digital Garden</title>
      <link>https://ruivieira.dev/digital-garden.html</link>
      <pubDate>Sun, 02 Jan 2022 00:49:16 +0000</pubDate>
      
      <guid>https://ruivieira.dev/digital-garden.html</guid>
      <description>Digital gardens are places where information grows.
Challenges Chronological is the wrong metaphor, but how to capture time and sequence? As an example, have a Git commit hash as well as a recent changes history. Each page already display a commit hash to give it a context as well as a recently updated section in the index. The RSS 2.0 file also provides a temporal source of truth.</description>
    </item>
    
    <item>
      <title>Distance metrics</title>
      <link>https://ruivieira.dev/distance-metrics.html</link>
      <pubDate>Thu, 30 Dec 2021 21:21:23 +0000</pubDate>
      
      <guid>https://ruivieira.dev/distance-metrics.html</guid>
      <description>L-p metrics Manhattan distance (L1) Given two vectors \(p\) and \(q\), such that
\begin{aligned} p &amp;amp;= \left(p_1, p_2, \dots,p_n\right) \\ q &amp;amp;= \left(q_1, q_2, \dots,q_n\right) \end{aligned}
we define the Manhattan distance as:
\[ d_1(p, q) = \|p - q\|_1 = \sum_{i=1}^n |p_i-q_i| \]
Euclidean distance (L2) In general, for points given by Cartesian coordinates in $n$-dimensional Euclidean space, the distance is
\[ d(p,q)=\sqrt {(p_{1}-q_{1})^{2}+(p_{2}-q_{2})^{2}+\cdots +(p_{i}-q_{i})^{2}+\cdots +(p_{n}-q_{n})^{2}} \]
Cluster distances Within-cluster sum of squares (WCSS) Given a set of observations (\(x_1, x_2,\dots,x_n\)), where each observation is a $d$-dimensional real vector, $k$-means clustering aims to partition the \(n\) observations into \(k\) (\(\leq n\)) sets \(S=\lbrace S_1, S_2, \dots, S_k\rbrace\) so as to minimize the within-cluster sum of squares (WCSS) (i.</description>
    </item>
    
    <item>
      <title>DOOM Emacs</title>
      <link>https://ruivieira.dev/doom-emacs.html</link>
      <pubDate>Thu, 11 Nov 2021 13:13:38 +0000</pubDate>
      
      <guid>https://ruivieira.dev/doom-emacs.html</guid>
      <description>Setup The following modules must be enabled in init.el:
`(go +lsp)` in the `lang` section `lsp` in the `tools` section `snippets` in the `editor` section `gopls` should be installed.
Running `doom sync` will finish the setup.</description>
    </item>
    
    <item>
      <title>DOOM Emacs</title>
      <link>https://ruivieira.dev/doom-emacs.html</link>
      <pubDate>Tue, 04 Jan 2022 20:58:34 +0000</pubDate>
      
      <guid>https://ruivieira.dev/doom-emacs.html</guid>
      <description>This an annotated version of my DOOM Emacs configuration. The source files can be found on Github or Sourcehut.
Languages Python Black formatter To allow formatting of Python blocks in org-mode and elsewhere, add python-black¬†1 to packages.el.
(package! python-black) Then we configure it with
(use-package! python-black :after python :hook (python-mode . python-black-on-save-mode-enable-dwim)) We should install black-machiatto¬†2 to allow formatting of partial regions.
Go The following modules must be enabled in init.</description>
    </item>
    
    <item>
      <title>Dunn index</title>
      <link>https://ruivieira.dev/dunn-index.html</link>
      <pubDate>Mon, 03 Jan 2022 21:56:06 +0000</pubDate>
      
      <guid>https://ruivieira.dev/dunn-index.html</guid>
      <description>There are several ways to measure the robustness of a clustering algorithm. Three commonly used metrics are the Dunn index, Davis-Bouldin index and Silhoutte index.
But before we start, let&amp;rsquo;s introduce some concepts.
We are interested in clustering algorithms for a dataset \(\mathcal{D}\) with \(N\) elements in a $n$-dimensional real space, that is:
\[ \mathcal{D} = {x_1, x_2, \ldots, x_N} \in \mathbb{R}^p \]
The clustering algorithm will create a set \(C\) of \(K\) distinct disjoint groups from \(\mathcal{D}\) \(C={c_1, c_2, \ldots, c_k}\), such that:</description>
    </item>
    
    <item>
      <title>Elisp</title>
      <link>https://ruivieira.dev/elisp.html</link>
      <pubDate>Tue, 04 Jan 2022 18:10:52 +0000</pubDate>
      
      <guid>https://ruivieira.dev/elisp.html</guid>
      <description>Elisp is the programming language used to program and configure Emacs.
Some Elisp topics:
 Elisp snippets  </description>
    </item>
    
    <item>
      <title>Elisp snippets</title>
      <link>https://ruivieira.dev/elisp-snippets.html</link>
      <pubDate>Tue, 04 Jan 2022 18:10:52 +0000</pubDate>
      
      <guid>https://ruivieira.dev/elisp-snippets.html</guid>
      <description>Snippets Execute command in shell buffer comint-send-string is the function we&amp;rsquo;re looking for.1
It takes a PROCESS and a STRING. You can get the process from the shell buffer, and conveniently the shell function returns the buffer, so you can streamline it all into something like:
(defun my-server () &amp;#34;SSH to my.server.com in `shell&amp;#39;buffer.&amp;#34; (interactive) (comint-send-string (get-buffer-process (shell)) &amp;#34;ssh my.server.com\n&amp;#34;)) Where the (shell) call will take care of creating the shell buffer and/or process if necessary.</description>
    </item>
    
    <item>
      <title>Emacs</title>
      <link>https://ruivieira.dev/emacs.html</link>
      <pubDate>Mon, 27 Dec 2021 18:05:27 +0000</pubDate>
      
      <guid>https://ruivieira.dev/emacs.html</guid>
      <description>Notes on Emacs My current flavour/distribution of Emacs is DOOM Emacs spacemacs DOOM Emacs. DOOM Emacs is my preferred configuration framework at the moment. I have used Spacemacs for a long time, but the performance increase by switching to DOOM Emacs is simply to great to be ignored. Recently, I have also migrated to the Emacs 28 branch which includes Elisp native compilation. It is a thing of beauty in terms of speed.</description>
    </item>
    
    <item>
      <title>Emacs Quarkus</title>
      <link>https://ruivieira.dev/emacs-quarkus.html</link>
      <pubDate>Sat, 18 Dec 2021 21:49:03 +0000</pubDate>
      
      <guid>https://ruivieira.dev/emacs-quarkus.html</guid>
      <description>An Emacs package for Quarkus.</description>
    </item>
    
    <item>
      <title>Error metrics</title>
      <link>https://ruivieira.dev/error-metrics.html</link>
      <pubDate>Thu, 25 Nov 2021 08:28:11 +0000</pubDate>
      
      <guid>https://ruivieira.dev/error-metrics.html</guid>
      <description> Root Mean Squared Error  </description>
    </item>
    
    <item>
      <title>Explainability</title>
      <link>https://ruivieira.dev/explainability.html</link>
      <pubDate>Thu, 30 Dec 2021 21:21:23 +0000</pubDate>
      
      <guid>https://ruivieira.dev/explainability.html</guid>
      <description>Topics Counterfactuals  Counterfactuals with Constraint Solvers  Fairness  Counterfactual Fairness (also how to create counterfactually fair models [Counterfactual Fairness in Java|in Java]])  Resources  TrustyAI Explainability Toolkit1 pre-print, https://arxiv.org/abs/2104.12717 A nice presentation on AI/ML explainability: https://explainml-tutorial.github.io/neurips20  Literature  Kakogeorgiou, Ioannis, and Konstantinos Karantzalos. &amp;ldquo;Evaluating Explainable Artificial Intelligence Methods for Multi-label Deep Learning Classification Tasks in Remote Sensing.&amp;rdquo; arXiv preprint arXiv:2104.01375 (2021).    : Geada, Rob, Tommaso Teofili, Rui Vieira, Rebecca Whitworth and Daniele Zonca.</description>
    </item>
    
    <item>
      <title>Extending JUnit</title>
      <link>https://ruivieira.dev/extending-junit.html</link>
      <pubDate>Tue, 07 Dec 2021 21:49:31 +0000</pubDate>
      
      <guid>https://ruivieira.dev/extending-junit.html</guid>
      <description>Summary </description>
    </item>
    
    <item>
      <title>Feature scaling</title>
      <link>https://ruivieira.dev/feature-scaling.html</link>
      <pubDate>Fri, 03 Dec 2021 18:27:37 +0000</pubDate>
      
      <guid>https://ruivieira.dev/feature-scaling.html</guid>
      <description></description>
    </item>
    
    <item>
      <title>Gemini</title>
      <link>https://ruivieira.dev/gemini.html</link>
      <pubDate>Thu, 11 Nov 2021 13:13:38 +0000</pubDate>
      
      <guid>https://ruivieira.dev/gemini.html</guid>
      <description>A recommended graphical Gemini browser is Lagrange or Amfora for a text-based/terminal browser.
Syntax Gemini syntax is quite similar to Markdown
Setup Using the agate server</description>
    </item>
    
    <item>
      <title>Git</title>
      <link>https://ruivieira.dev/git.html</link>
      <pubDate>Tue, 07 Dec 2021 21:49:31 +0000</pubDate>
      
      <guid>https://ruivieira.dev/git.html</guid>
      <description>Hooks pre-push The pre-push script is called by git push, when the push actually happens. If the exit status is 0, then the push will proceed, otherwise it will be stopped.
The script is supplied with the following arguments:
$1 -- Name of the remote to which the push is being done (Ex: origin) $2 -- URL to which the push is being done (Ex: https://&amp;lt;host&amp;gt;:&amp;lt;port&amp;gt;/&amp;lt;username&amp;gt;/&amp;lt;project_name&amp;gt;.git) Information about the commits which are being pushed is supplied as lines to the standard input in the form:</description>
    </item>
    
    <item>
      <title>Go</title>
      <link>https://ruivieira.dev/go.html</link>
      <pubDate>Tue, 07 Dec 2021 21:49:31 +0000</pubDate>
      
      <guid>https://ruivieira.dev/go.html</guid>
      <description>Some notes regarding the Go language. Some topics have graduated to their own page:
 Go resource bundling Go filesystem operations  Setup First things first. How to install Go in Fedora. You can either use dnf directly and simply run
$ sudo dnf install golang-bin This might not install the latest and greatest. If you want to use the most recent version, download it directly from https://golang.org/doc/install#install. If applicable, delete any previous /usr/local/go directory with</description>
    </item>
    
    <item>
      <title>Go filesystem operations</title>
      <link>https://ruivieira.dev/go-filesystem-operations.html</link>
      <pubDate>Tue, 07 Dec 2021 21:49:31 +0000</pubDate>
      
      <guid>https://ruivieira.dev/go-filesystem-operations.html</guid>
      <description>Notes on Go filesystem operations.
Copying files Go does not have an utility method to copy files. We have to rely on writing our own implementation using the reading and writing functionality in other packages. As an example:
package main import ( &amp;#34;io&amp;#34; &amp;#34;log&amp;#34; &amp;#34;os&amp;#34; ) func main() { from, err := os.Open(&amp;#34;./foo.txt&amp;#34;) if err != nil { log.Fatal(err) } defer from.Close() to, err := os.OpenFile(&amp;#34;./bar.txt&amp;#34;, os.O_RDWR|os.O_CREATE, 0666) if err !</description>
    </item>
    
    <item>
      <title>Go resource bundling</title>
      <link>https://ruivieira.dev/go-resource-bundling.html</link>
      <pubDate>Tue, 07 Dec 2021 21:49:31 +0000</pubDate>
      
      <guid>https://ruivieira.dev/go-resource-bundling.html</guid>
      <description>Notes on the installation and usage of pkger.
Installation done with
go get github.com/markbates/pkger/cmd/pkger pkger works by bundling the resources with a code-generated pkg.go. The configuration of assets to be bundled is done by reflection at compile time and not direct configuration. This is done by replacing standard Go file operations with pkger proxy ones, such as:
type Pkger interface { Parse(p string) (Path, error) Current() (here.Info, error) Info(p string) (here.</description>
    </item>
    
    <item>
      <title>Gower distance</title>
      <link>https://ruivieira.dev/gower-distance.html</link>
      <pubDate>Mon, 03 Jan 2022 21:56:06 +0000</pubDate>
      
      <guid>https://ruivieira.dev/gower-distance.html</guid>
      <description>For features \(x_i=\{x_{i1},\dots,x_{ip}\}\) and \(x_j=\{x_{j1},\dots,x_{jp}\}\), the Gower similarity matrix¬†1 can be defined as
\[ S_{\text{Gower}}(x_i, x_j) = \frac{\sum_{k=1}^p s_{ijk}\delta_{ijk}}{\sum_{k=1}^p \delta_{ijk}}. \]
For each feature \(k=1,\dots,p\) a score \(s_{ijk}\) is calculated. A quantity \(\delta_{ijk}\) is also calculated having possible values \(\{0,1\}\) depending on whether the variables \(x_i\) and \(x_j\) can be compared or not (e.g. if they have different types).
A special case2 for when no missing values exist can be formulated as the mean of the Gower similarity scores, that is:</description>
    </item>
    
    <item>
      <title>GPG</title>
      <link>https://ruivieira.dev/gpg.html</link>
      <pubDate>Tue, 07 Dec 2021 21:49:31 +0000</pubDate>
      
      <guid>https://ruivieira.dev/gpg.html</guid>
      <description>Installation macOS You can install GPG on macOS using:
$ brew install gpg Troubleshooting macOS Can&amp;rsquo;t access keychain from UI If a program cannot access the keychain from the UI, probably there&amp;rsquo;s some problem in prompting you for the passphrase. You can install, for instance pinentry to solve this. Install it with
$ brew install pinentry-mac and then register pinentry as the passphrase input option:
$ echo &amp;#34;pinentry-program /usr/local/bin/pinentry-mac&amp;#34; &amp;gt;&amp;gt; ~/.</description>
    </item>
    
    <item>
      <title>GraalVM</title>
      <link>https://ruivieira.dev/graalvm.html</link>
      <pubDate>Tue, 07 Dec 2021 21:49:31 +0000</pubDate>
      
      <guid>https://ruivieira.dev/graalvm.html</guid>
      <description>Missing headers On macOS, if you find missing headers when installing polyglot packages, try:
$ export CPATH=`xcrun --show-sdk-path`/usr/include </description>
    </item>
    
    <item>
      <title>Gradient-free optimisation</title>
      <link>https://ruivieira.dev/gradient-free-optimisation.html</link>
      <pubDate>Tue, 07 Dec 2021 21:49:31 +0000</pubDate>
      
      <guid>https://ruivieira.dev/gradient-free-optimisation.html</guid>
      <description> Hill-climbing optimisation  </description>
    </item>
    
    <item>
      <title>gulp</title>
      <link>https://ruivieira.dev/gulp.html</link>
      <pubDate>Fri, 03 Dec 2021 18:27:37 +0000</pubDate>
      
      <guid>https://ruivieira.dev/gulp.html</guid>
      <description>I have been working in a new library called gulp which you can find on https://github.com/ruivieira/gulp.
On the project&amp;rsquo;s page there are some usage examples but I will try to summarise the main points here.
The purpose of this library is to facilitate the parallel development of R and Java code, using rJava as the bridge. Creating bindings in rJava is quite simple, the tricky part of the process (in my opinion) being the maintenance of the bindings (usually done by hand) when refactoring your code.</description>
    </item>
    
    <item>
      <title>Hill-climbing optimisation</title>
      <link>https://ruivieira.dev/hill-climbing-optimisation.html</link>
      <pubDate>Mon, 03 Jan 2022 21:56:06 +0000</pubDate>
      
      <guid>https://ruivieira.dev/hill-climbing-optimisation.html</guid>
      <description>Global maximum Let&amp;rsquo;s try it with the function
\[ f(x,y) = e^{-\left(x^2+y^2\right)} \]
import numpy as np import matplotlib.pyplot as plt from plotutils import * x = np.linspace(-2.0, 2.0, 1000) y = np.linspace(-2.0, 2.0, 1000) X, Y = np.meshgrid(x, y) Z = np.exp(-(X ** 2 + Y ** 2)) fig, ax = plt.subplots(1, 1) cp = ax.contourf(X, Y, Z, cmap=cmaps[1]) ax.set_title(&amp;#34;f(x,y)&amp;#34;) ax.set_xlabel(&amp;#34;x&amp;#34;) ax.set_ylabel(&amp;#34;y&amp;#34;) plt.show() from gradient_free_optimizers import HillClimbingOptimizer search_space = { &amp;#34;x&amp;#34;: x, &amp;#34;y&amp;#34;: y, } opt = HillClimbingOptimizer(search_space) def f(pos): x = pos[&amp;#34;x&amp;#34;] y = pos[&amp;#34;y&amp;#34;] z = np.</description>
    </item>
    
    <item>
      <title>HTML</title>
      <link>https://ruivieira.dev/html.html</link>
      <pubDate>Wed, 22 Dec 2021 13:05:43 +0000</pubDate>
      
      <guid>https://ruivieira.dev/html.html</guid>
      <description>HTML Tricks Meters A meter element is availble natively for HTML.
&amp;lt;label for=&amp;#34;value1&amp;#34;&amp;gt;Low&amp;lt;/label&amp;gt; &amp;lt;meter id=&amp;#34;value1&amp;#34; min=&amp;#34;0&amp;#34; max=&amp;#34;100&amp;#34; low=&amp;#34;30&amp;#34; high=&amp;#34;75&amp;#34; optimum=&amp;#34;80&amp;#34; value=&amp;#34;25&amp;#34;&amp;gt;&amp;lt;/meter&amp;gt; &amp;lt;label for=&amp;#34;value2&amp;#34;&amp;gt;Medium&amp;lt;/label&amp;gt; &amp;lt;meter id=&amp;#34;value2&amp;#34; min=&amp;#34;0&amp;#34; max=&amp;#34;100&amp;#34; low=&amp;#34;30&amp;#34; high=&amp;#34;75&amp;#34; optimum=&amp;#34;80&amp;#34; value=&amp;#34;50&amp;#34;&amp;gt;&amp;lt;/meter&amp;gt; &amp;lt;label for=&amp;#34;value3&amp;#34;&amp;gt;High&amp;lt;/label&amp;gt; &amp;lt;meter id=&amp;#34;value3&amp;#34; min=&amp;#34;0&amp;#34; max=&amp;#34;100&amp;#34; low=&amp;#34;30&amp;#34; high=&amp;#34;75&amp;#34; optimum=&amp;#34;80&amp;#34; value=&amp;#34;80&amp;#34;&amp;gt;&amp;lt;/meter&amp;gt; Low 
Medium 
High 
Ordered list start Change the starting point of an ordered list.
&amp;lt;ol start=&amp;#34;11&amp;#34;&amp;gt; &amp;lt;li&amp;gt;Eleven&amp;lt;/li&amp;gt; &amp;lt;li&amp;gt;Twelve&amp;lt;/li&amp;gt; &amp;lt;li&amp;gt;Thirteen&amp;lt;/li&amp;gt; &amp;lt;li&amp;gt;Fourteen&amp;lt;/li&amp;gt; &amp;lt;/ol&amp;gt; Eleven Twelve Thirteen Fourteen  HTML Native Search &amp;lt;div class=&amp;#34;wrapper&amp;#34;&amp;gt; &amp;lt;h1&amp;gt;HTML native search&amp;lt;/h1&amp;gt; &amp;lt;input list=&amp;#34;items&amp;#34;&amp;gt; &amp;lt;datalist id=&amp;#34;items&amp;#34;&amp;gt; &amp;lt;option value=&amp;#34;Rui&amp;#34;&amp;gt; &amp;lt;option value=&amp;#34;Vieira&amp;#34;&amp;gt; &amp;lt;option value=&amp;#34;ruivieira.</description>
    </item>
    
    <item>
      <title>Hugo</title>
      <link>https://ruivieira.dev/hugo.html</link>
      <pubDate>Fri, 03 Dec 2021 18:27:37 +0000</pubDate>
      
      <guid>https://ruivieira.dev/hugo.html</guid>
      <description>Templates Special pages By default, the type for a piece of content is inherited from the the content‚Äôs section. So, the file you create for content at content/posts/my-post.md automatically has a type of posts. However, you may want to keep my-post.md within that section because you want to rely on Hugo‚Äôs default behavior to render the page to yoursite.com/posts/my-post, but you want it to render according to a different layout. In this case, you can specify a type for the content that overrides the default behavior.</description>
    </item>
    
    <item>
      <title>Introduction to Balanced Box-Decomposition Trees</title>
      <link>https://ruivieira.dev/introduction-to-balanced-box-decomposition-trees.html</link>
      <pubDate>Tue, 07 Dec 2021 21:49:31 +0000</pubDate>
      
      <guid>https://ruivieira.dev/introduction-to-balanced-box-decomposition-trees.html</guid>
      <description>Stardate 96893.29.
You are the USS Euler&amp;rsquo;s Science Officer at a moment when the computer graphical displays and voice systems went down. You only have enough deuterium for a short travel and need to find the nearest star system. This is not a simple matter of looking at a chart. You have multiple dimensions in which you can travel. In a bid for galactic peace, the Federation mandated that both Emacs and Vim should be installed in all computers.</description>
    </item>
    
    <item>
      <title>Introduction to Isolation Forests</title>
      <link>https://ruivieira.dev/introduction-to-isolation-forests.html</link>
      <pubDate>Tue, 07 Dec 2021 21:49:31 +0000</pubDate>
      
      <guid>https://ruivieira.dev/introduction-to-isolation-forests.html</guid>
      <description>Isolation Forests (IFs), presented in Liu1 et. al (2012), are a popular algorithm used for outlier classification. In a very simplified way, the method consists of building an ensemble of Isolation Trees (ITs) for a given data set and observations are deemed anomalies if they have short adjusted average path lengths on the ITs.
ITs, which will be covered shortly, have several properties in common with a fundamental data structure: the Binary Search Tree (BSTs).</description>
    </item>
    
    <item>
      <title>Java</title>
      <link>https://ruivieira.dev/java.html</link>
      <pubDate>Wed, 05 Jan 2022 12:05:31 +0000</pubDate>
      
      <guid>https://ruivieira.dev/java.html</guid>
      <description>Summary This page contains links to most Java topics.
Tools  Java build systems  Includes Maven    Concepts  Java Completable Futures Java consumer Extending JUnit  Reference Get user home directory System.getProperty(&amp;#34;user.home&amp;#34;); List files recursively try (Stream&amp;lt;Path&amp;gt; walk = Files.walk(Paths.get(input))) { List&amp;lt;String&amp;gt; result = walk.filter(Files::isRegularFile) .map(x -&amp;gt;x.toString()) .collect(Collectors.toList()); result.forEach(System.out::println); } catch (IOException e) { e.printStackTrace(); } In case we want the file subset with a specific extension, txt we can filter the stream with</description>
    </item>
    
    <item>
      <title>Java build systems</title>
      <link>https://ruivieira.dev/java-build-systems.html</link>
      <pubDate>Wed, 05 Jan 2022 12:05:31 +0000</pubDate>
      
      <guid>https://ruivieira.dev/java-build-systems.html</guid>
      <description>Summary Notes on Java build systems.
 Maven  </description>
    </item>
    
    <item>
      <title>Java Completable Futures</title>
      <link>https://ruivieira.dev/java-completable-futures.html</link>
      <pubDate>Thu, 09 Dec 2021 11:03:26 +0000</pubDate>
      
      <guid>https://ruivieira.dev/java-completable-futures.html</guid>
      <description>Running in parallel import java.util.concurrent.CompletableFuture; import java.lang.InterruptedException; import java.util.concurrent.ExecutionException; public static void main(String[] args) throws InterruptedException, ExecutionException { CompletableFuture&amp;lt;String&amp;gt; future1 = CompletableFuture.supplyAsync(() -&amp;gt; &amp;#34;Hello&amp;#34;); CompletableFuture&amp;lt;String&amp;gt; future2 = CompletableFuture.supplyAsync(() -&amp;gt; &amp;#34;Beautiful&amp;#34;); CompletableFuture&amp;lt;String&amp;gt; future3 = CompletableFuture.supplyAsync(() -&amp;gt; &amp;#34;World&amp;#34;); CompletableFuture&amp;lt;Void&amp;gt; combinedFuture = CompletableFuture.allOf(future1, future2, future3); CompletableFuture&amp;lt;String&amp;gt; result = combinedFuture.thenApply(v -&amp;gt; future1.join() + future2.join() + future3.join()); System.out.println(result.get()); } HelloBeautifulWorld Waiting for all Lets assume we have a completable future, \(f\). This future, in turn, create \(N\) additional completable futures, \(f_1, f_2, \dots, f_N\).</description>
    </item>
    
    <item>
      <title>Java consumer</title>
      <link>https://ruivieira.dev/java-consumer.html</link>
      <pubDate>Thu, 09 Dec 2021 11:03:26 +0000</pubDate>
      
      <guid>https://ruivieira.dev/java-consumer.html</guid>
      <description>Introduction Applying Introduced in Java 8, the Consumer interface aims at providing additional functional programming capabilities for Java.
Consumer defined functions do not return any value and they consist mainly of two methods:
void accept(T t); default Consumer&amp;lt;T&amp;gt; andThen(Consumer&amp;lt;? super T&amp;gt; after); Let&amp;rsquo;s look at an example:
import java.util.ArrayList; import java.util.function.Consumer; public static void main(String[] args) { Consumer&amp;lt;String&amp;gt; say = a -&amp;gt; System.out.println(&amp;#34;Hello, &amp;#34; + a + &amp;#34;!&amp;#34;); say.accept(&amp;#34;World&amp;#34;); } Hello, World!</description>
    </item>
    
    <item>
      <title>Java streams</title>
      <link>https://ruivieira.dev/java-streams.html</link>
      <pubDate>Thu, 09 Dec 2021 11:03:26 +0000</pubDate>
      
      <guid>https://ruivieira.dev/java-streams.html</guid>
      <description>Flat mapping Nested maps import java.util.Map; import java.util.HashMap; public static void main(String[] args) { final Map&amp;lt;String, Object&amp;gt; client = new HashMap&amp;lt;&amp;gt;(); client.put(&amp;#34;Age&amp;#34;, 43); client.put(&amp;#34;Salary&amp;#34;, 1950); client.put(&amp;#34;Existing payments&amp;#34;, 100); final Map&amp;lt;String, Object&amp;gt; loan = new HashMap&amp;lt;&amp;gt;(); loan.put(&amp;#34;Duration&amp;#34;, 15); loan.put(&amp;#34;Installment&amp;#34;, 100); final Map&amp;lt;String, Object&amp;gt; contextVariables = new HashMap&amp;lt;&amp;gt;(); contextVariables.put(&amp;#34;Client&amp;#34;, client); contextVariables.put(&amp;#34;Loan&amp;#34;, loan); System.out.println(contextVariables); } {Loan={Installment=100, Duration=15}, Client={Salary=1950, Existing payments=100, Age=43}} </description>
    </item>
    
    <item>
      <title>K-means clustering</title>
      <link>https://ruivieira.dev/k-means-clustering.html</link>
      <pubDate>Mon, 03 Jan 2022 21:56:06 +0000</pubDate>
      
      <guid>https://ruivieira.dev/k-means-clustering.html</guid>
      <description>Introduction K-means is still one of the fundamental clustering algorithms. It is used in such diverse fields as Natural Language Processing (NLP), social sciences and medical sciences.
The core idea behind K-means is that we want to group data in clusters. Data points will be assigned to a specific cluster depending on it&amp;rsquo;s distance to a cluster&amp;rsquo;s center, usually called the centroid.
It is important to note that typically, the mean distance to a centroid is used to partition the clusters, however, difference distances can be used and different pivot points.</description>
    </item>
    
    <item>
      <title>Langton&#39;s ant</title>
      <link>https://ruivieira.dev/langtons-ant.html</link>
      <pubDate>Fri, 03 Dec 2021 18:27:37 +0000</pubDate>
      
      <guid>https://ruivieira.dev/langtons-ant.html</guid>
      <description>Last week, at the North East Functional Programming meet up, we were given a code Kata consisting of the Langton&amp;rsquo;s ant algorithm.
I&amp;rsquo;ve had a go at Scala but decided later on to put a live version in this blog.
I considered several implementation options, such as scala.js and Elm, but in the end decided to implement it in plain Javascript.

 Add ant</description>
    </item>
    
    <item>
      <title>LARS path</title>
      <link>https://ruivieira.dev/lars-path.html</link>
      <pubDate>Thu, 11 Nov 2021 13:13:38 +0000</pubDate>
      
      <guid>https://ruivieira.dev/lars-path.html</guid>
      <description>Summary In statistics, least-angle regression (LARS) is an algorithm for fitting linear regression models to high-dimensional data, developed by Bradley Efron, Trevor Hastie, Iain Johnstone and Robert Tibshirani.[1]
Suppose we expect a response variable to be determined by a linear combination of a subset of potential covariates. Then the LARS algorithm provides a means of producing an estimate of which variables to include, as well as their coefficients.
Instead of giving a vector result, the LARS solution consists of a curve denoting the solution for each value of the L1 norm of the parameter vector.</description>
    </item>
    
    <item>
      <title>LaTeX</title>
      <link>https://ruivieira.dev/latex.html</link>
      <pubDate>Thu, 25 Nov 2021 08:28:11 +0000</pubDate>
      
      <guid>https://ruivieira.dev/latex.html</guid>
      <description>Notes on LaTeX.
Images side-by-side Use the subfig package.
\documentclass[10pt,a4paper]{article} \usepackage[demo]{graphicx} \usepackage{subfig} \begin{document} \begin{figure}%  \centering \subfloat[\centering label 1]{{\includegraphics[width=5cm]{img1} }}%  \qquad \subfloat[\centering label 2]{{\includegraphics[width=5cm]{img2} }}%  \caption{2 Figures side by side}%  \label{fig:example}% \end{figure} \end{document} </description>
    </item>
    
    <item>
      <title>Linux admin</title>
      <link>https://ruivieira.dev/linux-admin.html</link>
      <pubDate>Thu, 25 Nov 2021 08:28:11 +0000</pubDate>
      
      <guid>https://ruivieira.dev/linux-admin.html</guid>
      <description>Notes on Linux admin.</description>
    </item>
    
    <item>
      <title>LSTM</title>
      <link>https://ruivieira.dev/lstm.html</link>
      <pubDate>Sat, 27 Nov 2021 18:37:48 +0000</pubDate>
      
      <guid>https://ruivieira.dev/lstm.html</guid>
      <description>Introduction Long short-term memory (LSTM) is an artificial recurrent neural network (RNN) architecture.
Resources   Hochreiter, S. (1991). Untersuchungen zu dynamischen neuronalen netzen [in german] diploma thesis. TU Munich, (https://people.idsia.ch//~juergen/SeppHochreiter1991ThesisAdvisorSchmidhuber.pdf).  Bengio, Y., Simard, P., &amp;amp; Frasconi, P. (1994). Learning long-term dependencies with gradient descent is difficult. IEEE transactions on neural networks, 5(2), 157‚Äì166.  Hochreiter, S., &amp;amp; Schmidhuber, Jurgen (1997). Long short-term memory. Neural computation, 9(8), 1735‚Äì1780. http://www.bioinf.jku.at/publications/older/2604.pdf  Gers, F.</description>
    </item>
    
    <item>
      <title>Machine learning</title>
      <link>https://ruivieira.dev/machine-learning.html</link>
      <pubDate>Thu, 30 Dec 2021 00:15:14 +0000</pubDate>
      
      <guid>https://ruivieira.dev/machine-learning.html</guid>
      <description>Notes on machine learning.
Topics Synthetic data Generation  Using Synthetic data with SDV and Gaussian copulas, Synthetic data with SDV and CTGAN and Synthetic data with SDV and CopulaGAN.  Explainability Time-series  Time-series analysis  Clustering  K-means clustering  Fairness  Fairness in machine learning Model fairness  Metrics  Error metrics Distance metrics  Optimisation  Gradient-free optimisation  RNN  LSTM  Statistics  Streaming statistics  Frameworks  Cookiecutter Data Science Scikit-learn  </description>
    </item>
    
    <item>
      <title>Maven</title>
      <link>https://ruivieira.dev/maven.html</link>
      <pubDate>Wed, 05 Jan 2022 14:17:59 +0000</pubDate>
      
      <guid>https://ruivieira.dev/maven.html</guid>
      <description>Summary Notes on the Maven build system.
Artifacts √úber JARs There are many ways to build √ºber JARs, but we will talk about two, maven-assembly-plugin and maven-shade-plugin.
Assembly The maven-assembly-plugini¬†1 adds all dependencies inside the final fat JAR and can be used by adding the following to your pom.xml:
&amp;lt;plugin&amp;gt; &amp;lt;groupId&amp;gt;org.apache.maven.plugins&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;maven-assembly-plugin&amp;lt;/artifactId&amp;gt; &amp;lt;configuration&amp;gt; &amp;lt;descriptorRefs&amp;gt; &amp;lt;descriptorRef&amp;gt;jar-with-dependencies&amp;lt;/descriptorRef&amp;gt; &amp;lt;/descriptorRefs&amp;gt; &amp;lt;archive&amp;gt; &amp;lt;manifest&amp;gt; &amp;lt;mainClass&amp;gt;{your.package.main.class}&amp;lt;/mainClass&amp;gt; &amp;lt;/manifest&amp;gt; &amp;lt;/archive&amp;gt; &amp;lt;/configuration&amp;gt; &amp;lt;executions&amp;gt; &amp;lt;execution&amp;gt; &amp;lt;phase&amp;gt;package&amp;lt;/phase&amp;gt; &amp;lt;goals&amp;gt; &amp;lt;goal&amp;gt;single&amp;lt;/goal&amp;gt; &amp;lt;/goals&amp;gt; &amp;lt;/execution&amp;gt; &amp;lt;/executions&amp;gt; &amp;lt;/plugin&amp;gt; Shade The maven-shade-plugin¬†2 also adds all dependencies inside the final fat JAR, but additionally executes shading.</description>
    </item>
    
    <item>
      <title>MCMC notifications</title>
      <link>https://ruivieira.dev/mcmc-notifications.html</link>
      <pubDate>Thu, 25 Nov 2021 08:28:11 +0000</pubDate>
      
      <guid>https://ruivieira.dev/mcmc-notifications.html</guid>
      <description>It is said that patience is a virtue but the truth is that no one likes waiting (especially waiting around: this interesting article explores why people prefer walking 8 minutes to the airport‚Äôs baggage claim and having the bags ready rather than waiting the same amount of time entirely in the claim area).
Anyone performing computationally heavy work, such as Monte Carlo methods, will know that these are usually computationally expensive algorithms which, even in modern hardware, can result in waiting times in the magnitude of hours, days and even weeks.</description>
    </item>
    
    <item>
      <title>MCMC performance on substrate VM</title>
      <link>https://ruivieira.dev/mcmc-performance-on-substrate-vm.html</link>
      <pubDate>Thu, 25 Nov 2021 08:28:11 +0000</pubDate>
      
      <guid>https://ruivieira.dev/mcmc-performance-on-substrate-vm.html</guid>
      <description>Recently I&amp;rsquo;ve been following (but not very closely, I admit) the development of the GraalVM project. The project has many interesting goals (such as Project Metropolis, increased JIT performance and others).
However, having dabbled with projects such as Scala native and Kotlin native, one of the aspects of GraalVM that caught my attention was the SubstrateVM, which allegedly allows for a simple, straight-forward compilation of any Java bytecode into a native binary.</description>
    </item>
    
    <item>
      <title>Model fairness</title>
      <link>https://ruivieira.dev/model-fairness.html</link>
      <pubDate>Thu, 25 Nov 2021 08:28:11 +0000</pubDate>
      
      <guid>https://ruivieira.dev/model-fairness.html</guid>
      <description> [Unfairness detection]]  </description>
    </item>
    
    <item>
      <title>Monotonic Cubic Spline interpolation (with some Rust)</title>
      <link>https://ruivieira.dev/monotonic-cubic-spline-interpolation-with-some-rust.html</link>
      <pubDate>Thu, 25 Nov 2021 08:28:11 +0000</pubDate>
      
      <guid>https://ruivieira.dev/monotonic-cubic-spline-interpolation-with-some-rust.html</guid>
      <description>Monotonic Cubic Spline interpolation (MCSI) is a popular and useful method which fits a smooth, continuous function through discrete data. MCSI has several applications in the field of computer vision and trajectory fitting. MCSI further guarantees monotonicity of the smoothed approximation, something which a cubic spline approximation alone cannot. In this post I&amp;rsquo;ll show how to implement the method developed by F. N. Fritsch and R. E. Carlson1 in the Rust programming language.</description>
    </item>
    
    <item>
      <title>Navi</title>
      <link>https://ruivieira.dev/navi.html</link>
      <pubDate>Wed, 29 Dec 2021 22:19:12 +0000</pubDate>
      
      <guid>https://ruivieira.dev/navi.html</guid>
      <description>To instal navi on Linux you can use
$ bash &amp;lt;(curl -sL https://raw.githubusercontent.com/denisidoro/navi/master/scripts/install) When installing navi on Ubuntu 20 you will get the error
invalid preview window layout: up:2:nohidden invalid preview window layout: up:2:nohidden invalid preview window layout: up:2:nohidden This is very likely due to the fact that the fzf version is too old (perhaps 0.20).
To upgrade to the latest version of fzf use:
$ git clone --depth 1 https://github.</description>
    </item>
    
    <item>
      <title>OOB score in random forests</title>
      <link>https://ruivieira.dev/oob-score-in-random-forests.html</link>
      <pubDate>Fri, 03 Dec 2021 18:27:37 +0000</pubDate>
      
      <guid>https://ruivieira.dev/oob-score-in-random-forests.html</guid>
      <description>In the Random Forest algorithm, we build a decision tree (DT) based on a certain training dataset. This tree will be split in order to minimise some criteria function.
However, it is not desirable that individual DTs get too large with too many splits, so a common approach is to train each tree with a subset of the training data (sampled with replacement). This will ensure that individual tree maintain a manageable size, while the variance of the tree ensemble is reduced and the overall bias is not altered.</description>
    </item>
    
    <item>
      <title>Optaplanner</title>
      <link>https://ruivieira.dev/optaplanner.html</link>
      <pubDate>Mon, 03 Jan 2022 21:56:06 +0000</pubDate>
      
      <guid>https://ruivieira.dev/optaplanner.html</guid>
      <description>Example We will be using OptaPlanner to find the roots for a polynomial. We start by defining our planning entity, PolynomialEntity, which will calculate the polynomial value for a specific value. The polynomial we will use is
\[ f(x) = 2x^3 + 3x^2 + x + 6 \]
This polynomial has a root for \(x=-2\). The entity is then
Define the Lesson:
import org.optaplanner.core.api.domain.entity.PlanningEntity; import org.optaplanner.core.api.domain.valuerange.ValueRange; import org.optaplanner.core.api.domain.valuerange.ValueRangeFactory; import org.optaplanner.core.api.domain.valuerange.ValueRangeProvider; import org.</description>
    </item>
    
    <item>
      <title>Optimising random forest hyperparameters</title>
      <link>https://ruivieira.dev/optimising-random-forest-hyperparamaters.html</link>
      <pubDate>Mon, 03 Jan 2022 21:56:06 +0000</pubDate>
      
      <guid>https://ruivieira.dev/optimising-random-forest-hyperparamaters.html</guid>
      <description>Typically the hyper-parameters which will have the most significant impact on the behaviour of a random forest are the following:
 The number of decision trees in a random forest The split criteria Maximum depth of individual trees Minimum samples per internal node Maximum number of leaf nodes Random features per split Number of samples in bootstrap dataset  We will look at each of these hyper-parameters individually with examples of how to select them.</description>
    </item>
    
    <item>
      <title>Pandas</title>
      <link>https://ruivieira.dev/pandas.html</link>
      <pubDate>Thu, 25 Nov 2021 08:28:11 +0000</pubDate>
      
      <guid>https://ruivieira.dev/pandas.html</guid>
      <description> Pandas basics  </description>
    </item>
    
    <item>
      <title>Pandas basics</title>
      <link>https://ruivieira.dev/pandas-basics.html</link>
      <pubDate>Mon, 03 Jan 2022 21:56:06 +0000</pubDate>
      
      <guid>https://ruivieira.dev/pandas-basics.html</guid>
      <description>Column operations Renaming columns import pandas as pd import numpy as np import warnings warnings.filterwarnings(&amp;#39;ignore&amp;#39;) df = pd.DataFrame({ &amp;#39;a&amp;#39;:np.random.randn(6), &amp;#39;b&amp;#39;:np.random.choice( [5,7,np.nan], 6), &amp;#39;c&amp;#39;:np.random.choice( [&amp;#39;foo&amp;#39;,&amp;#39;bar&amp;#39;,&amp;#39;baz&amp;#39;], 6), }) df.head() a b c 0 1.630 NaN foo 1 2.378 NaN foo 2 0.461 7.000 baz 3 -1.176 NaN baz 4 0.909 NaN foo ```python df.rename(columns={&amp;ldquo;a&amp;rdquo;: &amp;ldquo;new_name&amp;rdquo;}, inplace=True) df.columns ```
Index([&amp;lsquo;new_name&amp;rsquo;, &amp;lsquo;b&amp;rsquo;, &amp;lsquo;c&amp;rsquo;], dtype=&amp;lsquo;object&amp;rsquo;)
Using a mapping function. In this case `str.upper()`:
```python df.rename(columns=str.upper, inplace=True) df.</description>
    </item>
    
    <item>
      <title>Portuguese Christmas recipes</title>
      <link>https://ruivieira.dev/portuguese-christmas-recipes.html</link>
      <pubDate>Mon, 27 Dec 2021 18:05:27 +0000</pubDate>
      
      <guid>https://ruivieira.dev/portuguese-christmas-recipes.html</guid>
      <description>Last year (2020) we spent Christmas in &amp;ldquo;lockdown&amp;rdquo; and we tried to make ourselves our full traditional Portuguese Christmas recipes from scratch &amp;ndash; while not being in Portugal. Herein lies the first issue: there are many different &amp;ldquo;traditions&amp;rdquo;, but these are the ones that me and my partner are used to.
Traditionally, Christmas celebrations in Portugal start on the night of Christmas eve and carry on during Christmas day. The main meals are then dinner on the 24th December and lunch on the 25th December.</description>
    </item>
    
    <item>
      <title>Project Euler in Elisp</title>
      <link>https://ruivieira.dev/project-euler-in-elisp.html</link>
      <pubDate>Thu, 11 Nov 2021 13:13:38 +0000</pubDate>
      
      <guid>https://ruivieira.dev/project-euler-in-elisp.html</guid>
      <description>Problem 1 If we list all the natural numbers below 10 that are multiples of 3 or 5, we get 3, 5, 6 and 9. The sum of these multiples is 23. Find the sum of all the multiples of 3 or 5 below 1000.
(require &amp;#39;cl) (apply &amp;#39;+ (remove-if-not &amp;#39;(lambda (x) (or (zerop (% x 3)) (zerop (% x 5)))) (loop for i from 1 to 999 collect i))) 233168 </description>
    </item>
    
    <item>
      <title>Python</title>
      <link>https://ruivieira.dev/python.html</link>
      <pubDate>Mon, 03 Jan 2022 21:56:06 +0000</pubDate>
      
      <guid>https://ruivieira.dev/python.html</guid>
      <description>Summary Main page for all things Python. Other pages cover specific topics, such as:
 Python environments [Python collections]] [&amp;lt;./Python&amp;gt; Pweave.org][Python Pweave]] Pandas Notes on [&amp;lt;./Python&amp;gt; grammar of graphics.org][Python&amp;rsquo;s grammar of graphics]]  Language changes In 2021, the Python steering council accepted the proposal to add a pattern-matching primitive to the language. The proposal consists of PEP634 along with PEP635 and PEP636.
Modules Relative import in Python 3 If a relative import is present inside a Python 3 file (e.</description>
    </item>
    
    <item>
      <title>Python environments</title>
      <link>https://ruivieira.dev/python-environments.html</link>
      <pubDate>Tue, 07 Dec 2021 21:49:31 +0000</pubDate>
      
      <guid>https://ruivieira.dev/python-environments.html</guid>
      <description>Interpreters To install different Python interpreters I strongly recommend asdf1.
macOS To install asdf on a macOS, first install the general dependencies with
$ brew install coreutils curl git then install asdf itself with
$ brew install asdf #+end_sr Add to the shell, in our case [zsh]] with: #+begin_src bash $ echo -e &amp;#34;\n. $(brew --prefix asdf)/asdf.sh&amp;#34; &amp;gt;&amp;gt; ~/.zshrc Add a plugin, in our case Python, with
$ asdf plugin add Python You can list all available versions with</description>
    </item>
    
    <item>
      <title>Python grammar of graphics</title>
      <link>https://ruivieira.dev/python-grammar-of-graphics.html</link>
      <pubDate>Mon, 03 Jan 2022 21:56:06 +0000</pubDate>
      
      <guid>https://ruivieira.dev/python-grammar-of-graphics.html</guid>
      <description>import pandas as pd mpg = pd.read_csv(&amp;#34;data/mpg.csv&amp;#34;) mpg.head() mpg cylinders displacement horsepower weight acceleration model_year origin name 0 18.000 8 307.000 130 3504 12.000 70 1 chevrolet chevelle malibu 1 15.000 8 350.000 165 3693 11.500 70 1 buick skylark 320 2 18.000 8 318.000 150 3436 11.000 70 1 plymouth satellite 3 16.000 8 304.000 150 3433 12.000 70 1 amc rebel sst 4 17.000 8 302.000 140 3449 10.</description>
    </item>
    
    <item>
      <title>Python monkey patching (for readability)</title>
      <link>https://ruivieira.dev/python-monkey-patching-for-readability.html</link>
      <pubDate>Mon, 03 Jan 2022 21:56:06 +0000</pubDate>
      
      <guid>https://ruivieira.dev/python-monkey-patching-for-readability.html</guid>
      <description>When preparing a Jupyter notebook for a workshop on recommendation engines which I&amp;rsquo;ve presented with a colleague, I was faced with the following problem:
 &amp;ldquo;How to break a large class definition into several cells so it can be presented step-by-step.&amp;rdquo;
 Having the ability to declare a rather complex (and large) Python class in separate cells has several advantages, the obvious one being the ability to fully document each method&amp;rsquo;s functionality with Markdown, rather than comments.</description>
    </item>
    
    <item>
      <title>Python Pandas</title>
      <link>https://ruivieira.dev/python-pandas.html</link>
      <pubDate>Thu, 25 Nov 2021 08:28:11 +0000</pubDate>
      
      <guid>https://ruivieira.dev/python-pandas.html</guid>
      <description>Subsetting and indexing Indexing performance Let&amp;rsquo;s assume the case where you a column BOOL with values Y or N that you want to replace with an integer 1 or 0 value. The inital1 instinct would be to do something like:
df[&amp;#34;BOOL&amp;#34;] = df[&amp;#34;BOOL&amp;#34;].eq(&amp;#34;Y&amp;#34;).mul(1) This will result in the warning
SettingWithCopyWarning: A value is trying to be set on a copy of a slice from a DataFrame. Try using .loc[row_indexer,col_indexer] = value instead Pandas documentation recommends the usage of the following idiom, since it can be considerably faster:</description>
    </item>
    
    <item>
      <title>Python Pweave</title>
      <link>https://ruivieira.dev/python-pweave.html</link>
      <pubDate>Fri, 03 Dec 2021 18:27:37 +0000</pubDate>
      
      <guid>https://ruivieira.dev/python-pweave.html</guid>
      <description>Installing Installing pweave is a matter of simply running1:
pip3 install pweave At the moment of writing, the editor which, IMO, has the best support for pweave is Atom (using Hydrogen). To install the necessary packages run:
apm install language-weave Hydrogen apm install language-markdown atom-html-preview pdf-view   I recommend using a separate pyenv for this.&amp;#160;&amp;#x21a9;&amp;#xfe0e;
   </description>
    </item>
    
    <item>
      <title>Quarkus</title>
      <link>https://ruivieira.dev/quarkus.html</link>
      <pubDate>Sat, 18 Dec 2021 21:48:42 +0000</pubDate>
      
      <guid>https://ruivieira.dev/quarkus.html</guid>
      <description>Page for Quarkus.
Creating projects An example on how to create a Quarkus project:
mvn io.quarkus:quarkus-maven-plugin:2.5.1.Final:create \  -DprojectGroupId=com.okta.rest \  -DprojectArtifactId=quarkus \  -DclassName=&amp;#34;com.okta.rest.quarkus.HelloResource&amp;#34; \  -Dpath=&amp;#34;/hello&amp;#34; \  -Dextensions=&amp;#34;smallrye-jwt,resteasy-reactive&amp;#34; </description>
    </item>
    
    <item>
      <title>Random walk</title>
      <link>https://ruivieira.dev/random-walk.html</link>
      <pubDate>Mon, 03 Jan 2022 21:56:06 +0000</pubDate>
      
      <guid>https://ruivieira.dev/random-walk.html</guid>
      <description>Introduction A random walk is a stochastic process which describes a path made of consecutive random steps.
Gaussian In Gaussian random walk the steps follow a continous Gaussian distribution. We will look at two different types, the univariate and multivariate kind.
Univariate A univariate Gaussian Random Walk, is a series of i.i.d. \(\mathcal{N}(0,1)\) random variables such that
\begin{align*} X_0&amp;amp;=0 \\ X_t&amp;amp;=X_{t‚àí1}+\epsilon_t \end{align*}
Where \(t=1,2,\dots\) and \(\epsilon_t\) is a series of i.</description>
    </item>
    
    <item>
      <title>Reading list</title>
      <link>https://ruivieira.dev/reading-list.html</link>
      <pubDate>Thu, 25 Nov 2021 08:28:11 +0000</pubDate>
      
      <guid>https://ruivieira.dev/reading-list.html</guid>
      <description>What I&amp;rsquo;m reading now and what I&amp;rsquo;ve read in the past.
Reading now Hospital Station, by James White (1962)
 Past readings Books I have read recently (most recently first).
 Retief: Envoy to New Worlds, by Keith Laumer (1972)    The Ballad of Beta-2, by Samuel R. Delany (1965)    Damnation Alley, by Roger Zelazny (1977)    The Practicing Stoic: A Philosophical User&amp;rsquo;s Manual.</description>
    </item>
    
    <item>
      <title>ROC</title>
      <link>https://ruivieira.dev/roc.html</link>
      <pubDate>Fri, 03 Dec 2021 18:27:37 +0000</pubDate>
      
      <guid>https://ruivieira.dev/roc.html</guid>
      <description>Receiver operating characteristic ROC (Receiver operating characteristic).
import pandas as pd data = pd.read_csv(&amp;#34;./data/credit-bias.zip&amp;#34;) </description>
    </item>
    
    <item>
      <title>Root Mean Squared Error</title>
      <link>https://ruivieira.dev/root-mean-squared-error.html</link>
      <pubDate>Mon, 03 Jan 2022 21:56:06 +0000</pubDate>
      
      <guid>https://ruivieira.dev/root-mean-squared-error.html</guid>
      <description>A typical way of measuring the difference between observations and results from a predictor.
The formal definition is:
\begin{aligned} RMSE(\hat{\theta}) &amp;amp;= \sqrt{\operatorname{MSE}(\hat{\theta})} \\ &amp;amp;= \sqrt{\operatorname{E}((\hat{\theta}-\theta)^2)}. \end{aligned}
For \(N\) observations \(Y=\{y_1,\dots,y_N\}\) we can express it as:
\[ RMSE=\sqrt{\frac{\sum_{n=1}^{N}(\hat{y}_{n}-y_{n})^{2}}{N}}. \]
Example import numpy as np X = 2 * np.random.rand(1000,1) X_b = np.c_[np.ones((1000,1)), X] Y = 1 + 2.5 * X + np.random.randn(1000,1) </description>
    </item>
    
    <item>
      <title>Rust</title>
      <link>https://ruivieira.dev/rust.html</link>
      <pubDate>Thu, 25 Nov 2021 08:28:11 +0000</pubDate>
      
      <guid>https://ruivieira.dev/rust.html</guid>
      <description>Install $ curl --proto &amp;#39;=https&amp;#39; --tlsv1.2 -sSf https://sh.rustup.rs | sh $ source $HOME/.cargo/env Create a new project using $ cargo new hello_world --bin # for a binary $ cargo new hello_world # for a library Exercises  Rust exercises, resolution of the rustlings exercises  Reference Uploading to crates.io Use
cargo publish Static constants &amp;ldquo;Lazy&amp;rdquo; static constants can be defined using the lazy_static macro from the lazy_static crate.
The crate can be added to the dependencies with</description>
    </item>
    
    <item>
      <title>Rust exercises</title>
      <link>https://ruivieira.dev/rust-exercises.html</link>
      <pubDate>Tue, 07 Dec 2021 21:49:31 +0000</pubDate>
      
      <guid>https://ruivieira.dev/rust-exercises.html</guid>
      <description>Variables Problem 1 fn main(){x=5;println!(&amp;#34;x has the value {}&amp;#34;,x);}Solution 1 fn main(){letx=5;println!(&amp;#34;x has the value {}&amp;#34;,x);}x has the value 5 Problem 2 fn main(){letx;ifx==10{println!(&amp;#34;Ten!&amp;#34;);}else{println!(&amp;#34;Not ten!&amp;#34;);}}Solution 2 fn main(){letx=10;ifx==10{println!(&amp;#34;Ten!&amp;#34;);}else{println!(&amp;#34;Not ten!&amp;#34;);}}Ten! Problem 3 fn main(){letx=3;println!(&amp;#34;Number {}&amp;#34;,x);x=5;// don&amp;#39;t change this line println!(&amp;#34;Number {}&amp;#34;,x);}Solution 3 fn main(){letmutx=3;println!(&amp;#34;Number {}&amp;#34;,x);x=5;// don&amp;#39;t change this line println!(&amp;#34;Number {}&amp;#34;,x);}Number 3 Number 5 Problem 4 fn main(){letx: i32;println!(&amp;#34;Number {}&amp;#34;,x);}Solution 4 fn main(){letx: i32 =1;println!(&amp;#34;Number {}&amp;#34;,x);}Problem 5 fn main(){letnumber=&amp;#34;T-H-R-E-E&amp;#34;;println!(&amp;#34;Spell a Number : {}&amp;#34;,number);number=3;println!</description>
    </item>
    
    <item>
      <title>Scikit-learn</title>
      <link>https://ruivieira.dev/scikit-learn.html</link>
      <pubDate>Thu, 25 Nov 2021 08:28:11 +0000</pubDate>
      
      <guid>https://ruivieira.dev/scikit-learn.html</guid>
      <description>Collection of notes on Python&amp;rsquo;s scikit-learn machine learning library.
 Optimising random forest hyperparamaters  </description>
    </item>
    
    <item>
      <title>Search Results</title>
      <link>https://ruivieira.dev/search.html</link>
      <pubDate>Sun, 28 Nov 2021 15:21:54 +0000</pubDate>
      
      <guid>https://ruivieira.dev/search.html</guid>
      <description>This file exists solely to respond to /search URL with the related search layout template.
No content shown here is rendered, all content is based in the template layouts/page/search.html
Setting a very low sitemap priority will tell search engines this is not important content.
This implementation uses Fusejs, jquery and mark.js
Initial setup Search depends on additional output content type of JSON in config.toml
[outputs] home = [&amp;quot;HTML&amp;quot;, &amp;quot;JSON&amp;quot;] Searching additional fileds To search additional fields defined in front matter, you must add it in 2 places.</description>
    </item>
    
    <item>
      <title>Serving models with Seldon</title>
      <link>https://ruivieira.dev/serving-models-with-seldon.html</link>
      <pubDate>Thu, 25 Nov 2021 08:28:11 +0000</pubDate>
      
      <guid>https://ruivieira.dev/serving-models-with-seldon.html</guid>
      <description>Deploying machine learning models in production comes with several requirements. We must manage the model lifecycle. We need reproducibility and typically use containerised workflows.
Seldon is a tool which aims at providing a production workflow for machine learning models, allowing to build model serving containers which expose well-defined APIs.
In this post, I&amp;rsquo;ll show how to create a simple model and how to deploy it with Seldon. The model is a customer segmentation one.</description>
    </item>
    
    <item>
      <title>Shell configurations</title>
      <link>https://ruivieira.dev/shell-configurations.html</link>
      <pubDate>Thu, 25 Nov 2021 08:28:11 +0000</pubDate>
      
      <guid>https://ruivieira.dev/shell-configurations.html</guid>
      <description>According to Bash&amp;rsquo;s man:
 /bin/bash The bash executable /etc/profile The system-wide initialization file, executed for login shells ~/.bash_profile The personal initialization file, executed for login shells ~/.bashrc The individual per-interactive-shell startup file ~/.bash_logout The individual login shell cleanup file, executed when a login shell exits ~/.inputrc Individual readline initialization file  With zsh, .zshrc is always read for an interactive shell, whether it&amp;rsquo;s a login one or not.</description>
    </item>
    
    <item>
      <title>Shell tricks</title>
      <link>https://ruivieira.dev/shell-tricks.html</link>
      <pubDate>Thu, 25 Nov 2021 08:28:11 +0000</pubDate>
      
      <guid>https://ruivieira.dev/shell-tricks.html</guid>
      <description>Reset cursor Sometimes, especially when using ANSI escape code heavy applications, your terminal state might get mangled. If that&amp;rsquo;s the case, it&amp;rsquo;s just a matter of performing a VT320 escape sequence to reset the state. For instance, in [zsh]], using the unhide command:
echo -en &amp;#34;\e[?25h&amp;#34; </description>
    </item>
    
    <item>
      <title>Site details</title>
      <link>https://ruivieira.dev/site-details.html</link>
      <pubDate>Sun, 02 Jan 2022 00:49:16 +0000</pubDate>
      
      <guid>https://ruivieira.dev/site-details.html</guid>
      <description>Assets This site&amp;rsquo;s CSS size is 84.1Kb. This, however, includes the following dependencies:
 LaTeX processor (MathJax) custom monospaced font (Jetbrains Mono) custom serif font (IBM Plex Serif)  The base CSS is heavily inspired by 58 bytes of css to look great nearly everywhere.
The CSS evolution (size, number of rules, etc) can be tracked over at Project Wallace.
The site is generated from a set of org-mode files using Emacs, which mainly performs the following tasks:</description>
    </item>
    
    <item>
      <title>Spearman correlation</title>
      <link>https://ruivieira.dev/spearman-correlation.html</link>
      <pubDate>Thu, 23 Dec 2021 00:13:59 +0000</pubDate>
      
      <guid>https://ruivieira.dev/spearman-correlation.html</guid>
      <description>Spearman rank correlation The Spearman correlation coefficient (or Spearman&amp;rsquo;s \(\rho\)) measures rank correlation between two variables.
Assuming monotonicity, the Spearman&amp;rsquo;s \(\rho\) will take values between \(-1\) and \(1\), representing completely opposite or identical ranks, respectively1.
Due to the dependance on ranks, the Spearman&amp;rsquo;s \(\rho\) is used for ordinal value, although discrete and continous values are possible.
If we consider a dataset of size \(n\), and \(X_i, Y_i\) as the scores, we can then calculate the ranks as \(\operatorname{R}({X_i}), \operatorname{R}({Y_i})\), and \(\rho\) as</description>
    </item>
    
    <item>
      <title>SSH</title>
      <link>https://ruivieira.dev/ssh.html</link>
      <pubDate>Thu, 25 Nov 2021 08:28:11 +0000</pubDate>
      
      <guid>https://ruivieira.dev/ssh.html</guid>
      <description>Configuration Config file To add a known server to the config file, use the following syntax:
Host mymachine HostName 127.0.0.1 User root Port 7654 There is no method to specify or provide on the command line the password in a non-interactive manner for ssh authentication using a OpenSSH built-in mechanism.</description>
    </item>
    
    <item>
      <title>Streaming statistics</title>
      <link>https://ruivieira.dev/streaming-statistics.html</link>
      <pubDate>Mon, 03 Jan 2022 21:56:06 +0000</pubDate>
      
      <guid>https://ruivieira.dev/streaming-statistics.html</guid>
      <description>Situations where streaming statistics are useful:
 Unknown number of observations Online streaming data Dataset too big for local processing  For the remainder, let&amp;rsquo;s consider a set of observations \(y_i\), weights \(w_i\), such that
\[ y_1,\dots,y_i \in \mathbb{R} \\ w_1,\dots,w_i\quad w_i \geq 0 \]
Mean and variances A naive approach to calculating a weighted streaming mean, \(\widehat{\mu}\) and unbiased streaming variance, \widehat{\mathbb{V}}, would be to calculate:
\begin{align*} \widehat{\mu}&amp;amp;=\frac{T^{(n)}}{S^{(n)}} \\ \widehat{\mathbb{V}}&amp;amp;=\frac{n}{(n-1)S^{(n)}}\left(U^{(n)}-S^{(n)}\widehat{\mu}^2\right) \end{align*}</description>
    </item>
    
    <item>
      <title>Synthetic Data Generation</title>
      <link>https://ruivieira.dev/synthetic-data-generation.html</link>
      <pubDate>Mon, 03 Jan 2022 21:56:06 +0000</pubDate>
      
      <guid>https://ruivieira.dev/synthetic-data-generation.html</guid>
      <description>:ID: Synthetic Data Generation :CUSTOM_ID: Synthetic Data Generation
Generating synthetic data Synthetic data will be used mainly for these scenarios:
 Regression Classification  Here we will mainly look at the methods provided by `scikit-learn` to generate synthetic datasets. For more advanced methods, such as using the SDV library please check the [Synthetic Data Generation with SDV|SDV page]]. It support methods such as [Synthetic data with SDV and Gaussian copulas|Gaussian copulas]], [Synthetic data with SDV and CTGAN|CTGAN]] and [Synthetic data with SDV and CopulaGAN|CopulaGAN]].</description>
    </item>
    
    <item>
      <title>Synthetic Data Generation with SDV</title>
      <link>https://ruivieira.dev/synthetic-data-generation-with-sdv.html</link>
      <pubDate>Fri, 03 Dec 2021 18:27:37 +0000</pubDate>
      
      <guid>https://ruivieira.dev/synthetic-data-generation-with-sdv.html</guid>
      <description>Synthetic data with SDV and Gaussian copulas Synthetic data with SDV and CTGAN Synthetic data with SDV and CopulaGAN </description>
    </item>
    
    <item>
      <title>Synthetic data with SDV and CopulaGAN</title>
      <link>https://ruivieira.dev/synthetic-data-with-svd-and-copulagan.html</link>
      <pubDate>Fri, 03 Dec 2021 18:27:37 +0000</pubDate>
      
      <guid>https://ruivieira.dev/synthetic-data-with-svd-and-copulagan.html</guid>
      <description>```python data.head() ```
``` ## Pclass Sex Age SibSp Parch Fare ## 0 3 1 22.0 1 0 7.2500 ## 1 1 0 38.0 1 0 71.2833 ## 2 3 0 26.0 0 0 7.9250 ## 3 1 0 35.0 1 0 53.1000 ## 4 3 1 35.0 0 0 8.0500 ```
```python data.describe(include=&amp;lsquo;all&amp;rsquo;) ```
``` ## Pclass Sex Age SibSp Parch Fare ## count 891.000000 891.000000 891.000000 891.000000 891.000000 891.</description>
    </item>
    
    <item>
      <title>Synthetic data with SDV and CTGAN</title>
      <link>https://ruivieira.dev/synthetic-data-with-sdv-and-ctgan.html</link>
      <pubDate>Fri, 03 Dec 2021 18:27:37 +0000</pubDate>
      
      <guid>https://ruivieira.dev/synthetic-data-with-sdv-and-ctgan.html</guid>
      <description>```python import pandas as pd import warnings
warnings.filterwarnings(&amp;lsquo;ignore&amp;rsquo;)
data = pd.read_csv(&amp;ldquo;data/svm-hyperparameters-train-features.csv&amp;rdquo;) ```
```python data.head() ```
```python data.describe(include=&amp;lsquo;all&amp;rsquo;) ```
```python from sdv.tabular import CTGAN ```
```python model = CTGAN() ```
```python model.fit(data) ```
```python new_data = model.sample(200) ```
```python new_data.head() ```
```python new_data.describe(include=&amp;lsquo;all&amp;rsquo;) ```
```python from sdv.evaluation import evaluate
evaluate(new_data, data) ```
```python model = CTGAN( epochs=500, batch_size=100, generator_dim=(256, 256, 256), discriminator_dim=(256, 256, 256) ) ```
```python model.fit(data) ```
```python new_data = model.</description>
    </item>
    
    <item>
      <title>Synthetic data with SVD and Gaussian copulas</title>
      <link>https://ruivieira.dev/synthetic-data-with-svd-and-gaussian-copulas.html</link>
      <pubDate>Mon, 03 Jan 2022 21:56:06 +0000</pubDate>
      
      <guid>https://ruivieira.dev/synthetic-data-with-svd-and-gaussian-copulas.html</guid>
      <description>import pandas as pd data = pd.read_csv(&amp;#34;data/svm-hyperparameters-train-features.csv&amp;#34;) data.head() Pclass Sex Age SibSp Parch Fare 0 3 1 22.0 1 0 7.2500 1 1 0 38.0 1 0 71.2833 2 3 0 26.0 0 0 7.9250 3 1 0 35.0 1 0 53.1000 4 3 1 35.0 0 0 8.0500 data.describe(include=&amp;#34;all&amp;#34;) Pclass Sex Age SibSp Parch Fare count 891.000000 891.000000 891.000000 891.000000 891.000000 891.000000 mean 2.308642 0.647587 29.758889 0.523008 0.381594 32.204208 std 0.</description>
    </item>
    
    <item>
      <title>t as mixture of Normals</title>
      <link>https://ruivieira.dev/t-as-mixture-of-normals.html</link>
      <pubDate>Thu, 25 Nov 2021 08:28:11 +0000</pubDate>
      
      <guid>https://ruivieira.dev/t-as-mixture-of-normals.html</guid>
      <description>(Based on Rasmus B√•√•th&amp;rsquo;s post)
A scaled \(t\) distribution, with \(\mu\) mean, \(s\) scale and \(\nu\) degrees of freedom, can be simulated
from a mixture of Normals with \(\\mu\) mean and precisions following a Gamma distribution:
\begin{aligned} y &amp;amp;\sim \mathcal{N}\left(\mu,\sigma\right) \\\\ \sigma^2 &amp;amp;\sim \mathcal{IG}\left(\frac{\nu}{2},s^2\frac{\nu}{2}\right) \end{aligned}
Since I&amp;rsquo;ve recently pickep up again the crystal-gsl in my spare time, I&amp;rsquo;ve decided to replicate the previously mentioned post using a Crystal one-liner.
To simulate 10,000 samples from \(t_2\left(0,3\right)\) using the mixture, we can then write:</description>
    </item>
    
    <item>
      <title>Tikz</title>
      <link>https://ruivieira.dev/tikz.html</link>
      <pubDate>Sun, 12 Dec 2021 22:38:46 +0000</pubDate>
      
      <guid>https://ruivieira.dev/tikz.html</guid>
      <description>Introduction Tikz is a language for vector drawing and producing technical illustrations.
Examples Random elements 
\begin{tikzpicture} \foreach \y in {0.0,0.1,...,0.9} { \foreach \x in {0.0,0.1,...,0.9} { \pgfmathparse{0.9*rnd+0.3} \definecolor{MyColor}{rgb}{\pgfmathresult,\pgfmathresult,\pgfmathresult} \path[fill=MyColor] (\x,\y) rectangle ++(0.1,0.1); } } \end{tikzpicture}  Template functions If we want to draw several blocks of random noise (as in Random elements):

\newcommand\RandomBlock[8]{% 	\foreach \y in {{#1},{#2},...,{#3}} { \foreach \x in {{#4},{#5},...,{#6}} { \pgfmathparse{0.9*rnd+0.1} \definecolor{Grey}{rgb}{\pgfmathresult,\pgfmathresult,\pgfmathresult} \path[fill=Grey] (\x,\y) rectangle ++({#7},{#8}); } } } \begin{tikzpicture} \RandomBlock{0.</description>
    </item>
    
    <item>
      <title>Time-series analysis</title>
      <link>https://ruivieira.dev/time-series-analysis.html</link>
      <pubDate>Mon, 03 Jan 2022 21:56:06 +0000</pubDate>
      
      <guid>https://ruivieira.dev/time-series-analysis.html</guid>
      <description>Peaks and troughs Let&amp;rsquo;s start by creating a random walk.
import numpy as np import pandas as pd N = 10000 step_set = [-1, 0, 1] origin = np.zeros((1, 1)) step_shape = (N, 1) steps = np.random.choice(a=step_set, size=step_shape) path = np.concatenate([origin, steps]).cumsum(0) df = pd.DataFrame(path, columns =[&amp;#39;y&amp;#39;]) df.head()  from scipy.signal import find_peaks subset = df.head(100) peaks = find_peaks(subset[&amp;#34;y&amp;#34;]) troughs = find_peaks(-subset[&amp;#34;y&amp;#34;]) peaks &amp;lt;AxesSubplot:xlabel=&amp;#39;index&amp;#39;, ylabel=&amp;#39;y&amp;#39;&amp;gt;  Autocorrelation Pandas provides an autocorrelation1 plot function.</description>
    </item>
    
    <item>
      <title>Transformation functions</title>
      <link>https://ruivieira.dev/transformation-functions.html</link>
      <pubDate>Fri, 03 Dec 2021 18:27:37 +0000</pubDate>
      
      <guid>https://ruivieira.dev/transformation-functions.html</guid>
      <description></description>
    </item>
    
    <item>
      <title>Typography</title>
      <link>https://ruivieira.dev/typography.html</link>
      <pubDate>Tue, 07 Dec 2021 21:49:31 +0000</pubDate>
      
      <guid>https://ruivieira.dev/typography.html</guid>
      <description>Summary A collection of notes on typography.
Monospaced fonts The Monoid font has a post to explain some design decisions1.
  https://medium.com/larsenwork-andreas-larsen/class-based-contextual-positioning-in-monospaced-fonts-cb6b8b9ffe6f&amp;#160;&amp;#x21a9;&amp;#xfe0e;
   </description>
    </item>
    
    <item>
      <title>Unfairness detection</title>
      <link>https://ruivieira.dev/unfairness-detection.html</link>
      <pubDate>Fri, 03 Dec 2021 18:27:37 +0000</pubDate>
      
      <guid>https://ruivieira.dev/unfairness-detection.html</guid>
      <description></description>
    </item>
    
    <item>
      <title>Vim keys</title>
      <link>https://ruivieira.dev/vim-keys.html</link>
      <pubDate>Thu, 25 Nov 2021 08:28:11 +0000</pubDate>
      
      <guid>https://ruivieira.dev/vim-keys.html</guid>
      <description>Copy paste  Press v to select characters, or uppercase V to select whole lines y to copy Press P to paste before the cursor, or p to paste after  </description>
    </item>
    
    <item>
      <title>Vue</title>
      <link>https://ruivieira.dev/vue.html</link>
      <pubDate>Fri, 03 Dec 2021 18:27:37 +0000</pubDate>
      
      <guid>https://ruivieira.dev/vue.html</guid>
      <description>Download a file ```javascript saveFile: function() { const data = JSON.stringify(this.myData) const blob = new Blob([data], {type: &amp;lsquo;text/plain&amp;rsquo;}) const e = document.createEvent(&amp;lsquo;MouseEvents&amp;rsquo;), a = document.createElement(&amp;lsquo;a&amp;rsquo;); a.download = &amp;ldquo;myData.json&amp;rdquo;; a.href = window.URL.createObjectURL(blob); a.dataset.downloadurl = [&amp;lsquo;text/json&amp;rsquo;, a.download, a.href].join(&#39;:&#39;); e.initEvent(&amp;lsquo;click&amp;rsquo;, true, false, window, 0, 0, 0, 0, 0, false, false, false, false, 0, null); a.dispatchEvent(e); } ```</description>
    </item>
    
    <item>
      <title>Workflow</title>
      <link>https://ruivieira.dev/workflow.html</link>
      <pubDate>Mon, 20 Dec 2021 16:14:35 +0000</pubDate>
      
      <guid>https://ruivieira.dev/workflow.html</guid>
      <description>Backup External media Since I switch OSes frequently1 having a minimum-hassle filesystem for my external drives would be very convenient. exFAT2 seems to me like the best solution. In fact, exFAT is the default FS for SD cards and USB flash drives with more than 32Gb. So perhaps, if have a large-ish USB pen or an external drive, chances are you don&amp;rsquo;t even need to reformat it.
Workflow Optimise PNGs To optimise an entired folder of PNGs, you could use optipng.</description>
    </item>
    
    <item>
      <title>XGBoost</title>
      <link>https://ruivieira.dev/xgboost.html</link>
      <pubDate>Mon, 03 Jan 2022 21:56:06 +0000</pubDate>
      
      <guid>https://ruivieira.dev/xgboost.html</guid>
      <description>Introduction Example Training XGBoost with the credit-bias dataset.
import pandas as pd data = pd.read_csv(&amp;#34;data/credit-bias-train.zip&amp;#34;) data.head() NewCreditCustomer Amount Interest LoanDuration Education \ 0 False 2125.0 20.97 60 4.0 1 False 3000.0 17.12 60 5.0 2 True 9100.0 13.67 60 4.0 3 True 635.0 42.66 60 2.0 4 False 5000.0 24.52 60 4.0 NrOfDependants EmploymentDurationCurrentEmployer \ 0 0.0 6.0 1 0.0 6.0 2 1.0 3.0 3 0.0 1.0 4 1.0 5.0 IncomeFromPrincipalEmployer IncomeFromPension IncomeFromFamilyAllowance \ 0 0.</description>
    </item>
    
  </channel>
</rss>