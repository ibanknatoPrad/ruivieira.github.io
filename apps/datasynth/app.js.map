{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/App.vue?77aa","webpack:///./src/components/ClusterCenter.vue?56ef","webpack:///./src/App.vue","webpack:///./src/Cluster.ts","webpack:///./src/Data.ts","webpack:///./src/App.vue?3acc","webpack:///./src/App.vue?dfb6","webpack:///./src/store/index.ts","webpack:///./src/components/ClusterCenter.vue","webpack:///./src/components/ClusterCenter.vue?fcf0","webpack:///./src/components/ClusterCenter.vue?efe3","webpack:///./src/main.ts","webpack:///./src/assets/logo.png"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","src","height","span","ref","model","blob","label-position","label-width","label","nSamples","size","nFeatures","min","nCenters","centers","center","class","id","globalStd","colour","palette","active-text","inactive-text","clusterStd","disabled","generate","downloadCSV","inline","effect","placement","content","Xindex","placeholder","Yindex","width","type","options","series","plotData","createDefaultClusterCenter","features","distribution","std","range","map","Math","random","useGlobalStd","stdMatrices","_centers","identity","console","log","chunks","chunk","floor","concat","index","centerDistribution","to2DArray","values","sample","header","rows","flatMap","x","join","toString","components","InfoFilled","setup","individualStd","generatePalette","colormap","nshades","max","format","alpha","title","text","colors","chart","animations","enabled","toolbar","show","zoom","yaxis","labels","formatter","val","toFixed","markers","fillOpacity","updateCenters","newValue","oldValue","take","diff","point","Blob","e","document","createEvent","a","createElement","download","href","URL","createObjectURL","dataset","downloadurl","initEvent","dispatchEvent","render","state","mutations","actions","style","props","Boolean","required","default","set","__scopeId","app","App","use","store","component","ClusterCenter","mount"],"mappings":"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","file":"app.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"app\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/apps/datasynth/\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([0,\"chunk-vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","export * from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../node_modules/vue-loader-v16/dist/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./App.vue?vue&type=style&index=0&id=5b2ee064&lang=scss\"","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./ClusterCenter.vue?vue&type=style&index=0&id=8dc7211a&scoped=true&lang=scss\"","<template>\n  <el-row>\n    <el-col :span=\"6\"><img src=\"./assets/logo.png\" height=\"64\" /></el-col>\n  </el-row>\n  <el-row>\n    <el-col :span=\"6\">\n      <el-row>\n        <el-form\n          ref=\"form\"\n          :model=\"blob\"\n          label-position=\"left\"\n          label-width=\"10rem\"\n        >\n          <el-form-item label=\"Number of samples\">\n            <el-input v-model=\"blob.nSamples\" size=\"mini\"></el-input>\n          </el-form-item>\n          <el-form-item label=\"Number of features\">\n            <el-input-number\n              v-model=\"nFeatures\"\n              :min=\"2\"\n              size=\"mini\"\n            ></el-input-number>\n          </el-form-item>\n          <el-form-item label=\"Number of centers\">\n            <el-input-number\n              v-model=\"nCenters\"\n              :min=\"1\"\n              size=\"mini\"\n            ></el-input-number>\n          </el-form-item>\n          <div\n            class=\"cluster-center\"\n            v-for=\"(center, i) in centers\"\n            :key=\"center.id + centers.length\"\n            label-width=\"0\"\n          >\n            <cluster-center\n              :center=\"center\"\n              :globalStd=\"globalStd\"\n              :colour=\"palette[i]\"\n            />\n          </div>\n\n          <el-form-item label-width=\"0\">\n            <el-switch\n              v-model=\"globalStd\"\n              active-text=\"Global\"\n              inactive-text=\"Individual\"\n            ></el-switch>\n          </el-form-item>\n          <el-form-item\n            label=\"Global std of clusters\"\n            size=\"mini\"\n            label-position=\"top\"\n            v-if=\"globalStd\"\n          >\n            <el-input\n              v-model=\"blob.clusterStd\"\n              :disabled=\"!globalStd\"\n            ></el-input>\n          </el-form-item>\n\n          <el-button @click=\"generate\">Generate data</el-button>\n          <el-button @click=\"downloadCSV\" :disabled=\"data == null\"\n            >Download CSV</el-button\n          >\n        </el-form>\n      </el-row>\n    </el-col>\n    <el-col :span=\"16\" :push=\"1\">\n      <el-row v-if=\"nFeatures > 2\">\n        <el-form :inline=\"true\" class=\"demo-form-inline\">\n          <el-form-item>\n            <el-tooltip class=\"item\" effect=\"dark\" placement=\"bottom\">\n              <template #content>\n                If the dataset contains more than two features,<br />select\n                which pairs to visualise\n              </template>\n              <el-icon>\n                <info-filled />\n              </el-icon>\n            </el-tooltip>\n          </el-form-item>\n          <el-form-item label=\"X\">\n            <el-select\n              v-model=\"Xindex\"\n              placeholder=\"Select feature\"\n              size=\"mini\"\n            >\n              <el-option\n                v-for=\"n in nFeatures\"\n                :key=\"n\"\n                :label=\"'Feature ' + n\"\n                :value=\"n - 1\"\n              ></el-option>\n            </el-select>\n          </el-form-item>\n          <el-form-item label=\"Y\">\n            <el-select\n              v-model=\"Yindex\"\n              placeholder=\"Select feature\"\n              size=\"mini\"\n            >\n              <el-option\n                v-for=\"n in nFeatures\"\n                :key=\"n\"\n                :label=\"'Feature ' + n\"\n                :value=\"n - 1\"\n              ></el-option>\n            </el-select>\n          </el-form-item>\n        </el-form>\n      </el-row>\n      <el-row>\n        <apexchart\n          v-if=\"data\"\n          width=\"100%\"\n          type=\"scatter\"\n          :options=\"options\"\n          :series=\"plotData\"\n        ></apexchart>\n      </el-row>\n    </el-col>\n  </el-row>\n</template>\n\n<script lang=\"ts\">\nimport { computed, defineComponent, Ref, ref, watch } from \"vue\";\nimport _ from \"lodash\";\nimport { ChartOptions } from \"../../../deno/deno-experiments/apex/options\";\nimport { ClusterCenter, createDefaultClusterCenter } from \"./Cluster\";\nimport { generateData, generateCSV, Series } from \"./Data\";\nimport { InfoFilled } from \"@element-plus/icons\";\nimport colormap from \"colormap\";\n\nexport default defineComponent({\n  name: \"App\",\n  components: {\n    [InfoFilled.name]: InfoFilled,\n  },\n  data() {\n    return {};\n  },\n  setup() {\n    const nCenters = ref(3);\n    const globalStd = ref(true);\n    const blob = ref({\n      nSamples: 100,\n      clusterStd: 1.0,\n      individualStd: [] as number[],\n    });\n    blob.value.individualStd = _.range(nCenters.value + 1).map(() => 1.0);\n    const generatePalette = function (n: number) {\n      return colormap({\n        colormap: \"rainbow\",\n        nshades: Math.max(n, 9),\n        format: \"rgba\",\n        alpha: 1,\n      });\n    };\n\n    const palette: Ref<[number, number, number, number][]> = ref(\n      generatePalette(nCenters.value)\n    );\n    const options: ChartOptions = {\n      title: {\n        text: \"Data\",\n      },\n      colors: palette.value.map((c) => `rgba(${c[0]}, ${c[1]}, ${c[2]}, 0.9)`),\n      chart: {\n        type: \"scatter\",\n        animations: {\n          enabled: false,\n        },\n        toolbar: {\n          show: false,\n        },\n        zoom: {\n          enabled: false,\n        },\n      },\n      yaxis: {\n        labels: {\n          formatter: (val: number) => `${val.toFixed(2)}`,\n        },\n      },\n      markers: {\n        fillOpacity: 0.75,\n      },\n    };\n    const nFeatures = ref(2);\n    const centers: Ref<ClusterCenter[]> = ref(\n      _.range(nCenters.value).map((i) =>\n        createDefaultClusterCenter(i, nFeatures.value)\n      )\n    );\n\n    const data: Ref<Series[] | null> = ref(null);\n\n    const updateCenters = ref(0);\n\n    console.log(palette.value);\n    watch(nCenters, (newValue, oldValue) => {\n      console.log(`Changing number of centers from ${oldValue} to ${newValue}`);\n      centers.value = _.range(newValue).map((i) =>\n        createDefaultClusterCenter(i, nFeatures.value)\n      );\n      updateCenters.value += 1;\n      if (newValue < oldValue) {\n        blob.value.individualStd = _.take(blob.value.individualStd, newValue);\n      } else if (newValue > oldValue) {\n        const diff = newValue - oldValue;\n        blob.value.individualStd = _.concat(\n          blob.value.individualStd,\n          _.range(diff).map(() => 1.0)\n        );\n      }\n      // re-generate data\n      generate();\n    });\n\n    watch(nFeatures, (newValue, oldValue) => {\n      console.log(\n        `Changing number of features from ${oldValue} to ${newValue}`\n      );\n      centers.value = _.range(nCenters.value).map((i) =>\n        createDefaultClusterCenter(i, newValue)\n      );\n      updateCenters.value += 1;\n      // re-generate data\n      generate();\n      Xindex.value = 0;\n      Yindex.value = 1;\n    });\n\n    const generate = function () {\n      data.value = generateData(\n        blob.value.nSamples,\n        centers.value,\n        nFeatures.value,\n        globalStd.value,\n        blob.value.clusterStd\n      );\n      console.log(data.value);\n    };\n\n    const plotData = computed(() => {\n      console.log(`Plot feature ${Xindex.value} vs. ${Yindex.value}`);\n      return data.value!.map((series: Series) => {\n        return {\n          name: series.name,\n          data: series.data.map((point) => [\n            point[Xindex.value],\n            point[Yindex.value],\n          ]),\n        };\n      });\n    });\n\n    // plots\n    const Xindex: Ref<number> = ref(0);\n    const Yindex: Ref<number> = ref(1);\n\n    const downloadCSV = function () {\n      const d = generateCSV(data.value!);\n      const blob = new Blob([d], { type: \"text/plain\" });\n      const e = document.createEvent(\"MouseEvents\"),\n        a = document.createElement(\"a\");\n      a.download = \"data.csv\";\n      a.href = window.URL.createObjectURL(blob);\n      a.dataset.downloadurl = [\"text/json\", a.download, a.href].join(\":\");\n      e.initEvent(\"click\", true, false);\n      a.dispatchEvent(e);\n    };\n\n    return {\n      blob,\n      nCenters,\n      nFeatures,\n      globalStd,\n      updateCenters,\n      options,\n      data,\n      centers,\n      generate,\n      Xindex,\n      Yindex,\n      plotData,\n      generatePalette,\n      palette,\n      downloadCSV,\n    };\n  },\n});\n</script>\n\n<style lang=\"scss\">\n// import global style\n@import \"../../sites/blog-source/assets/style.scss\";\n\n#app {\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n}\n.cluster-center {\n  .el-form-item {\n    font-size: 0.9rem;\n    margin-bottom: 0px;\n  }\n}\n</style>\n","export interface ClusterCenter {\n  distribution: string;\n  id: number;\n  std: number;\n  features: number;\n}\n\nexport function createDefaultClusterCenter(\n  id: number,\n  features: number\n): ClusterCenter {\n  return {\n    distribution: \"Gaussian\",\n    id: id,\n    std: 1.0,\n    features: features,\n  };\n}\n","import _ from \"lodash\";\nimport { Matrix } from \"ml-matrix\";\nimport MultivariateNormal from \"multivariate-normal\";\nimport { ClusterCenter } from \"./Cluster\";\n\nconst generateCenterBox = function (nFeatures: number): number[] {\n  return _.range(nFeatures).map(() => -10 + Math.random() * 20);\n};\n\nexport interface Series {\n  name: string;\n  data: number[][];\n}\n\nexport const generateData = function (\n  nSamples: number,\n  centers: ClusterCenter[],\n  nFeatures: number,\n  useGlobalStd: boolean,\n  globalStd = 1.0\n): Series[] {\n  const nCenters = centers.length;\n\n  const _centers = _.range(nCenters).map(() => generateCenterBox(nFeatures));\n\n  let stdMatrices: Matrix[];\n\n  if (useGlobalStd) {\n    stdMatrices = _.range(nCenters).map(() =>\n      Matrix.identity(nFeatures, nFeatures, globalStd)\n    );\n  } else {\n    stdMatrices = _.range(nCenters).map((i) => {\n      console.log(`Using std=${centers[i].std} for cluster ${centers[i].id}`);\n      return Matrix.identity(nFeatures, nFeatures, centers[i].std);\n    });\n  }\n\n  console.log(_.range(nSamples));\n  const chunks = _.chunk(_.range(nSamples), Math.floor(nSamples / nCenters));\n  if (chunks.length > nCenters) {\n    // merge remainder with last chunk\n    chunks[nCenters - 1] = _.concat(chunks[nCenters - 1], chunks[nCenters]);\n  }\n  const data = _.range(nCenters).map((index) => {\n    const centerDistribution = MultivariateNormal(\n      _centers[index],\n      stdMatrices[index].to2DArray()\n    );\n    const values = chunks[index].map(() => centerDistribution.sample());\n    return {\n      name: `Cluster ${index + 1}`,\n      data: values,\n    };\n  });\n  return data;\n};\n\nexport const generateCSV = function (data: Series[]): string {\n  const header = _.range(data[0].data[0].length).map((i) => `feature_${i}`);\n  header.push(\"cluster\");\n  console.log(header);\n\n  const rows = data.flatMap((d, i) =>\n    d.data.map((x) => x.join(\",\") + \",\" + i.toString())\n  );\n  console.log(rows);\n  return _.concat([header.join(\",\")], rows).join(\"\\n\");\n};\n","\nimport { computed, defineComponent, Ref, ref, watch } from \"vue\";\nimport _ from \"lodash\";\nimport { ChartOptions } from \"../../../deno/deno-experiments/apex/options\";\nimport { ClusterCenter, createDefaultClusterCenter } from \"./Cluster\";\nimport { generateData, generateCSV, Series } from \"./Data\";\nimport { InfoFilled } from \"@element-plus/icons\";\nimport colormap from \"colormap\";\n\nexport default defineComponent({\n  name: \"App\",\n  components: {\n    [InfoFilled.name]: InfoFilled,\n  },\n  data() {\n    return {};\n  },\n  setup() {\n    const nCenters = ref(3);\n    const globalStd = ref(true);\n    const blob = ref({\n      nSamples: 100,\n      clusterStd: 1.0,\n      individualStd: [] as number[],\n    });\n    blob.value.individualStd = _.range(nCenters.value + 1).map(() => 1.0);\n    const generatePalette = function (n: number) {\n      return colormap({\n        colormap: \"rainbow\",\n        nshades: Math.max(n, 9),\n        format: \"rgba\",\n        alpha: 1,\n      });\n    };\n\n    const palette: Ref<[number, number, number, number][]> = ref(\n      generatePalette(nCenters.value)\n    );\n    const options: ChartOptions = {\n      title: {\n        text: \"Data\",\n      },\n      colors: palette.value.map((c) => `rgba(${c[0]}, ${c[1]}, ${c[2]}, 0.9)`),\n      chart: {\n        type: \"scatter\",\n        animations: {\n          enabled: false,\n        },\n        toolbar: {\n          show: false,\n        },\n        zoom: {\n          enabled: false,\n        },\n      },\n      yaxis: {\n        labels: {\n          formatter: (val: number) => `${val.toFixed(2)}`,\n        },\n      },\n      markers: {\n        fillOpacity: 0.75,\n      },\n    };\n    const nFeatures = ref(2);\n    const centers: Ref<ClusterCenter[]> = ref(\n      _.range(nCenters.value).map((i) =>\n        createDefaultClusterCenter(i, nFeatures.value)\n      )\n    );\n\n    const data: Ref<Series[] | null> = ref(null);\n\n    const updateCenters = ref(0);\n\n    console.log(palette.value);\n    watch(nCenters, (newValue, oldValue) => {\n      console.log(`Changing number of centers from ${oldValue} to ${newValue}`);\n      centers.value = _.range(newValue).map((i) =>\n        createDefaultClusterCenter(i, nFeatures.value)\n      );\n      updateCenters.value += 1;\n      if (newValue < oldValue) {\n        blob.value.individualStd = _.take(blob.value.individualStd, newValue);\n      } else if (newValue > oldValue) {\n        const diff = newValue - oldValue;\n        blob.value.individualStd = _.concat(\n          blob.value.individualStd,\n          _.range(diff).map(() => 1.0)\n        );\n      }\n      // re-generate data\n      generate();\n    });\n\n    watch(nFeatures, (newValue, oldValue) => {\n      console.log(\n        `Changing number of features from ${oldValue} to ${newValue}`\n      );\n      centers.value = _.range(nCenters.value).map((i) =>\n        createDefaultClusterCenter(i, newValue)\n      );\n      updateCenters.value += 1;\n      // re-generate data\n      generate();\n      Xindex.value = 0;\n      Yindex.value = 1;\n    });\n\n    const generate = function () {\n      data.value = generateData(\n        blob.value.nSamples,\n        centers.value,\n        nFeatures.value,\n        globalStd.value,\n        blob.value.clusterStd\n      );\n      console.log(data.value);\n    };\n\n    const plotData = computed(() => {\n      console.log(`Plot feature ${Xindex.value} vs. ${Yindex.value}`);\n      return data.value!.map((series: Series) => {\n        return {\n          name: series.name,\n          data: series.data.map((point) => [\n            point[Xindex.value],\n            point[Yindex.value],\n          ]),\n        };\n      });\n    });\n\n    // plots\n    const Xindex: Ref<number> = ref(0);\n    const Yindex: Ref<number> = ref(1);\n\n    const downloadCSV = function () {\n      const d = generateCSV(data.value!);\n      const blob = new Blob([d], { type: \"text/plain\" });\n      const e = document.createEvent(\"MouseEvents\"),\n        a = document.createElement(\"a\");\n      a.download = \"data.csv\";\n      a.href = window.URL.createObjectURL(blob);\n      a.dataset.downloadurl = [\"text/json\", a.download, a.href].join(\":\");\n      e.initEvent(\"click\", true, false);\n      a.dispatchEvent(e);\n    };\n\n    return {\n      blob,\n      nCenters,\n      nFeatures,\n      globalStd,\n      updateCenters,\n      options,\n      data,\n      centers,\n      generate,\n      Xindex,\n      Yindex,\n      plotData,\n      generatePalette,\n      palette,\n      downloadCSV,\n    };\n  },\n});\n","import { render } from \"./App.vue?vue&type=template&id=5b2ee064\"\nimport script from \"./App.vue?vue&type=script&lang=ts\"\nexport * from \"./App.vue?vue&type=script&lang=ts\"\n\nimport \"./App.vue?vue&type=style&index=0&id=5b2ee064&lang=scss\"\nscript.render = render\n\nexport default script","import { createStore } from \"vuex\";\n\nexport default createStore({\n  state: {},\n  mutations: {},\n  actions: {},\n  modules: {},\n});\n","<template>\n<div class=\"center\" :style='`background-color:rgba(${colour[0]},${colour[1]},${colour[2]},0.15)`'>\n  <el-form-item label-width=\"0\" label-position=\"left\">\n    <span class=\"info-text\">Cluster center</span><span class=\"info-data\"> #{{ center.id + 1 }}</span>\n    </el-form-item>\n    <el-form-item label=\"Distribution\">\n      <el-select v-model=\"distribution\" placeholder=\"Select\" size=\"mini\">\n        <el-option-group label=\"Continuous\">\n          <el-option label=\"Gaussian\" value=\"Gaussian\"> </el-option>\n        </el-option-group>\n      </el-select>\n    </el-form-item>\n    <el-form-item label=\"Std\">\n      <el-input placeholder=\"Standard deviation\" v-model=\"std\" :disabled=\"globalStd\" size=\"mini\"></el-input>\n    </el-form-item>\n</div>\n</template>\n<script lang=\"ts\">\nimport { computed, defineComponent, PropType, ref, toRefs } from \"vue\";\nimport { ClusterCenter } from \"@/Cluster\";\n\nexport default defineComponent({\n  props: {\n    center: Object as PropType<ClusterCenter>,\n    globalStd: {\n        type: Boolean,\n        required: true,\n        default: true\n    },\n    colour: Object as PropType<[number, number, number, number]>\n  },\n  setup(props) {\n    const distribution = ref(\"Gaussian\");\n    const center = toRefs(props).center;\n\n    const std = computed({\n      get(): number {\n        return center.value!.std;\n      },\n      set(newValue: number): void {\n        center.value!.std = newValue;\n      },\n    });\n\n    return {\n      distribution,\n      std,\n    };\n  },\n});\n</script>\n\n<style scoped lang=\"scss\">\n.center {\n  // background-color: rgb(240, 240, 240);\n  border-radius: 0.25rem;\n  padding: 0.5rem;\n  margin: 1rem;\n}\n.info-text {\n    color: rgb(83, 83, 83);\n}\n.info-data {\n    font-weight: bold;\n}\n</style>","\nimport { computed, defineComponent, PropType, ref, toRefs } from \"vue\";\nimport { ClusterCenter } from \"@/Cluster\";\n\nexport default defineComponent({\n  props: {\n    center: Object as PropType<ClusterCenter>,\n    globalStd: {\n        type: Boolean,\n        required: true,\n        default: true\n    },\n    colour: Object as PropType<[number, number, number, number]>\n  },\n  setup(props) {\n    const distribution = ref(\"Gaussian\");\n    const center = toRefs(props).center;\n\n    const std = computed({\n      get(): number {\n        return center.value!.std;\n      },\n      set(newValue: number): void {\n        center.value!.std = newValue;\n      },\n    });\n\n    return {\n      distribution,\n      std,\n    };\n  },\n});\n","import { render } from \"./ClusterCenter.vue?vue&type=template&id=8dc7211a&scoped=true\"\nimport script from \"./ClusterCenter.vue?vue&type=script&lang=ts\"\nexport * from \"./ClusterCenter.vue?vue&type=script&lang=ts\"\n\nimport \"./ClusterCenter.vue?vue&type=style&index=0&id=8dc7211a&scoped=true&lang=scss\"\nscript.render = render\nscript.__scopeId = \"data-v-8dc7211a\"\n\nexport default script","import { createApp } from \"vue\";\nimport App from \"./App.vue\";\nimport store from \"./store\";\nimport ElementPlus from \"element-plus\";\nimport \"element-plus/lib/theme-chalk/index.css\";\nimport VueApexCharts from \"vue3-apexcharts\";\n\nimport ClusterCenter from \"@/components/ClusterCenter.vue\"\n\nconst app = createApp(App);\napp.use(ElementPlus);\napp.use(VueApexCharts);\napp.use(store);\n\napp.component(\"cluster-center\", ClusterCenter)\n\napp.mount(\"#app\");\n","module.exports = __webpack_public_path__ + \"img/logo.21be158c.png\";"],"sourceRoot":""}